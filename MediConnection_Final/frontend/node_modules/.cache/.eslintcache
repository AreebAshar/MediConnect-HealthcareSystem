[{"/Users/ray/Desktop/MediConnection_Final/frontend/src/index.js":"1","/Users/ray/Desktop/MediConnection_Final/frontend/src/App.js":"2","/Users/ray/Desktop/MediConnection_Final/frontend/src/store/index.js":"3","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/loaders.js":"4","/Users/ray/Desktop/MediConnection_Final/frontend/src/store/sessionStorage.js":"5","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/index.js":"6","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/index.js":"7","/Users/ray/Desktop/MediConnection_Final/frontend/src/store/slices/sessionSlice.js":"8","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/layout.js":"9","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/content.js":"10","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/sideBar.js":"11","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/index.js":"12","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/index.js":"13","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/hooks.js":"14","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/index.js":"15","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/index.js":"16","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/index.js":"17","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/signInForm.js":"18","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/register.js":"19","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/icons.js":"20","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/navs.js":"21","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/widgets.js":"22","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/users.js":"23","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/titleBar.js":"24","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/form.js":"25","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/dates.js":"26","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/deleteUser.js":"27","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/physicianInformation.js":"28","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/views/chatView.js":"29","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/password.js":"30","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/accountInformation.js":"31","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/waitingRoom.js":"32","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/appointment.js":"33","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/views/searchPhysicians.js":"34","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/views/user.js":"35","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/allAppointments.js":"36","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/views/searchPatients.js":"37","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/widgets/banner.js":"38","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/widgets/recentMedications.js":"39","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/widgets/todaysAppointment.js":"40","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/index.js":"41","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/cards.js":"42","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/lists.js":"43","/Users/ray/Desktop/MediConnection_Final/frontend/src/components/dropdown.js":"44","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/lists.js":"45","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/lists.js":"46","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/index.js":"47","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/newAppointmentForm.js":"48","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/index.js":"49","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/index.js":"50","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/physicianSection.js":"51","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/infoSection.js":"52","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/serviceSection.js":"53","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/progress.js":"54","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/listView.js":"55","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/listView.js":"56","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/index.js":"57","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/index.js":"58","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/index.js":"59","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/utils.js":"60","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/utils.js":"61","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/manageBar.js":"62","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/sendMessage.js":"63","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/messageWindow.js":"64","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/banner.js":"65","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/banner.js":"66","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/notes/index.js":"67","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/medications/index.js":"68","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/medications/index.js":"69","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/information/index.js":"70","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/services/index.js":"71","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/about/index.js":"72","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/subtitleBar.js":"73","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/notes/addSection.js":"74","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/medications/addSection.js":"75","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/notes/listSection.js":"76","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/medications/listSection.js":"77","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/services/addSection.js":"78","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/services/listSection.js":"79","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/medications/listSection.js":"80","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/about/about.js":"81"},{"size":343,"mtime":1682939739000,"results":"82","hashOfConfig":"83"},{"size":1860,"mtime":1683035153000,"results":"84","hashOfConfig":"83"},{"size":391,"mtime":1683572723174,"results":"85","hashOfConfig":"83"},{"size":2396,"mtime":1682939739000,"results":"86","hashOfConfig":"83"},{"size":627,"mtime":1683035153000,"results":"87","hashOfConfig":"83"},{"size":318,"mtime":1683134349000,"results":"88","hashOfConfig":"83"},{"size":2687,"mtime":1683134972000,"results":"89","hashOfConfig":"83"},{"size":1125,"mtime":1683572738205,"results":"90","hashOfConfig":"83"},{"size":2091,"mtime":1682939739000,"results":"91","hashOfConfig":"83"},{"size":2916,"mtime":1683134422000,"results":"92","hashOfConfig":"83"},{"size":5804,"mtime":1683142034826,"results":"93","hashOfConfig":"83"},{"size":884,"mtime":1683037762000,"results":"94","hashOfConfig":"83"},{"size":1749,"mtime":1683135752000,"results":"95","hashOfConfig":"83"},{"size":380,"mtime":1683137122000,"results":"96","hashOfConfig":"83"},{"size":2207,"mtime":1683136455000,"results":"97","hashOfConfig":"83"},{"size":1666,"mtime":1682939739000,"results":"98","hashOfConfig":"83"},{"size":1526,"mtime":1683135292000,"results":"99","hashOfConfig":"83"},{"size":2307,"mtime":1683139560212,"results":"100","hashOfConfig":"83"},{"size":10945,"mtime":1683139597205,"results":"101","hashOfConfig":"83"},{"size":914,"mtime":1682939739000,"results":"102","hashOfConfig":"83"},{"size":3588,"mtime":1682939739000,"results":"103","hashOfConfig":"83"},{"size":4207,"mtime":1682939739000,"results":"104","hashOfConfig":"83"},{"size":4381,"mtime":1683137180000,"results":"105","hashOfConfig":"83"},{"size":3034,"mtime":1683135202000,"results":"106","hashOfConfig":"83"},{"size":2011,"mtime":1682939739000,"results":"107","hashOfConfig":"83"},{"size":7020,"mtime":1683113998000,"results":"108","hashOfConfig":"83"},{"size":2838,"mtime":1683139935971,"results":"109","hashOfConfig":"83"},{"size":5991,"mtime":1683139935967,"results":"110","hashOfConfig":"83"},{"size":237,"mtime":1682939739000,"results":"111","hashOfConfig":"83"},{"size":4562,"mtime":1683139935971,"results":"112","hashOfConfig":"83"},{"size":9156,"mtime":1683139935977,"results":"113","hashOfConfig":"83"},{"size":1468,"mtime":1682939739000,"results":"114","hashOfConfig":"83"},{"size":704,"mtime":1683136503000,"results":"115","hashOfConfig":"83"},{"size":1003,"mtime":1682939739000,"results":"116","hashOfConfig":"83"},{"size":292,"mtime":1682939739000,"results":"117","hashOfConfig":"83"},{"size":1455,"mtime":1682939739000,"results":"118","hashOfConfig":"83"},{"size":994,"mtime":1682939739000,"results":"119","hashOfConfig":"83"},{"size":2565,"mtime":1683139935966,"results":"120","hashOfConfig":"83"},{"size":3557,"mtime":1683139935966,"results":"121","hashOfConfig":"83"},{"size":5729,"mtime":1683139935966,"results":"122","hashOfConfig":"83"},{"size":580,"mtime":1682939739000,"results":"123","hashOfConfig":"83"},{"size":1266,"mtime":1683137080000,"results":"124","hashOfConfig":"83"},{"size":1230,"mtime":1682939739000,"results":"125","hashOfConfig":"83"},{"size":1881,"mtime":1683113533000,"results":"126","hashOfConfig":"83"},{"size":5703,"mtime":1683139935966,"results":"127","hashOfConfig":"83"},{"size":3782,"mtime":1683139935945,"results":"128","hashOfConfig":"83"},{"size":1225,"mtime":1683139935966,"results":"129","hashOfConfig":"83"},{"size":4657,"mtime":1683139935971,"results":"130","hashOfConfig":"83"},{"size":3287,"mtime":1683570129220,"results":"131","hashOfConfig":"83"},{"size":1522,"mtime":1683139935952,"results":"132","hashOfConfig":"83"},{"size":3715,"mtime":1683139935967,"results":"133","hashOfConfig":"83"},{"size":4493,"mtime":1683136602000,"results":"134","hashOfConfig":"83"},{"size":3147,"mtime":1683139935967,"results":"135","hashOfConfig":"83"},{"size":660,"mtime":1682939739000,"results":"136","hashOfConfig":"83"},{"size":4126,"mtime":1683035153000,"results":"137","hashOfConfig":"83"},{"size":1337,"mtime":1683136082000,"results":"138","hashOfConfig":"83"},{"size":3081,"mtime":1683139935966,"results":"139","hashOfConfig":"83"},{"size":3262,"mtime":1683136708000,"results":"140","hashOfConfig":"83"},{"size":2894,"mtime":1683136125000,"results":"141","hashOfConfig":"83"},{"size":1535,"mtime":1683136536000,"results":"142","hashOfConfig":"83"},{"size":1718,"mtime":1682939739000,"results":"143","hashOfConfig":"83"},{"size":3214,"mtime":1683570193267,"results":"144","hashOfConfig":"83"},{"size":2335,"mtime":1683037705000,"results":"145","hashOfConfig":"83"},{"size":4597,"mtime":1683139935966,"results":"146","hashOfConfig":"83"},{"size":4422,"mtime":1683136760000,"results":"147","hashOfConfig":"83"},{"size":3845,"mtime":1683136198000,"results":"148","hashOfConfig":"83"},{"size":3373,"mtime":1683139935966,"results":"149","hashOfConfig":"83"},{"size":3655,"mtime":1683139935966,"results":"150","hashOfConfig":"83"},{"size":1618,"mtime":1683139935965,"results":"151","hashOfConfig":"83"},{"size":4232,"mtime":1683570170890,"results":"152","hashOfConfig":"83"},{"size":3323,"mtime":1683139935952,"results":"153","hashOfConfig":"83"},{"size":318,"mtime":1683136318000,"results":"154","hashOfConfig":"83"},{"size":620,"mtime":1682939739000,"results":"155","hashOfConfig":"83"},{"size":3022,"mtime":1683139935966,"results":"156","hashOfConfig":"83"},{"size":3137,"mtime":1683139935966,"results":"157","hashOfConfig":"83"},{"size":2720,"mtime":1683056319000,"results":"158","hashOfConfig":"83"},{"size":2493,"mtime":1682939739000,"results":"159","hashOfConfig":"83"},{"size":2931,"mtime":1683139935952,"results":"160","hashOfConfig":"83"},{"size":2620,"mtime":1683035153000,"results":"161","hashOfConfig":"83"},{"size":1807,"mtime":1682939739000,"results":"162","hashOfConfig":"83"},{"size":4957,"mtime":1683139935966,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},"1jopzan",{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"167"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"167"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"167"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"167"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"167"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"167"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"167"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"167"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},"/Users/ray/Desktop/MediConnection_Final/frontend/src/index.js",[],[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/App.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/store/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/loaders.js",["416"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport { Col, FluidContainer, Row } from './layout';\n\n\nexport const Loader = React.forwardRef((props, ref) => {\n    return (\n        <div ref={ref} className=\"md-loader p-1\">\n            {props.isLoading &&\n                <FluidContainer className=\"p-3\">\n                    <Row className=\"justify-content-center\">\n                        <Col className=\"col-auto align-self-center\">\n                            <Row>\n                                <div id=\"ellipsis01\" className=\"md-ellipsis mx-1\"></div>\n                                <div id=\"ellipsis02\" className=\"md-ellipsis mx-1\"></div>\n                                <div id=\"ellipsis03\" className=\"md-ellipsis mx-1\"></div>\n                            </Row>\n                        </Col>\n                    </Row>\n                </FluidContainer>\n            }\n        </div>\n    );\n})\n\n\nexport function AutoLoader({ callback=null }) {\n    const loaderRef = useRef(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasLoaded, setHasLoaded] = useState(false);\n\n    useEffect(() => {\n        const currentLoaderRef = loaderRef.current;\n        const options = {\n            root: null,\n            rootMargin: \"0px\",\n            threshold: [0, 1]\n        };\n\n        async function handleObserver(entries, observer) {\n            if (!isLoading) {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        if (entry.intersectionRatio >= 0.90 && !hasLoaded) {\n                            setIsLoading(true);\n\n                            if (callback) {\n                                callback();\n                            }\n                            \n                            setIsLoading(false);\n                            setHasLoaded(true);\n                        }\n                    } else {\n                        setHasLoaded(false);\n                    }\n                });\n            }\n        }\n\n        const observer = new IntersectionObserver(handleObserver, options);\n        observer.observe(currentLoaderRef);\n\n        return function disconnectObserver() {\n            if (observer) {\n                observer.disconnect();\n            }\n        }\n    }, [callback, hasLoaded]);\n\n    return (\n        <Loader ref={loaderRef} isLoading={isLoading} />\n    );\n}","/Users/ray/Desktop/MediConnection_Final/frontend/src/store/sessionStorage.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/store/slices/sessionSlice.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/layout.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/content.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/sideBar.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/hooks.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/signInForm.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/welcome/register.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/icons.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/navs.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/widgets.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/users.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/titleBar.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/form.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/dates.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/deleteUser.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/physicianInformation.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/views/chatView.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/password.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/settings/widgets/accountInformation.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/waitingRoom.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/appointment.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/views/searchPhysicians.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/views/user.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/allAppointments.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/views/searchPatients.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/widgets/banner.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/widgets/recentMedications.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/dashboard/widgets/todaysAppointment.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/cards.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/lists.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/components/dropdown.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/lists.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/lists.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/index.js",["417"],[],"import React, { useEffect, useState } from \"react\";\n\nimport DetailedView from \"./detailedView\";\nimport axios from \"axios\";\n\nexport default function Chat(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [chat, setChat] = useState({});\n\n  useEffect(() => {\n    console.log(\"Props chat\", props);\n    async function initialize() {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(\n          `http://localhost:4090/api/chats/${props.id}`,\n          {\n            credentials: \"same-origin\",\n            headers: {\n              Authorization: `Bearer ${props.session.authToken}`,\n            },\n          }\n        );\n        // console.log(\"A chat\", response);\n        let data = response.data;\n        if (response.status !== 200) {\n          throw new Error(data.message);\n        }\n\n        setChat(data);\n      } catch (err) {\n        console.error(`Failed to initialize chat- ${props.id}. ${err}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    initialize();\n  }, [props.id, props.session]);\n\n  if (props.listView) {\n    return null;\n  } else {\n    return (\n      <DetailedView session={props.session} chat={chat} isLoading={isLoading} />\n    );\n  }\n}\n","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/newAppointmentForm.js",["418"],[],"import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form } from \"../../../../components/form\";\nimport { isValidDate } from \"../../../../components/dates\";\n\nimport ProgressBar from \"./progress\";\nimport PhysicianSection from \"./physicianSection\";\nimport ServiceSection from \"./serviceSection\";\nimport InfoSection from \"./infoSection\";\nimport axios from \"axios\";\n\nexport default function NewAppointmentForm(props) {\n  const minSteps = 1;\n  const maxSteps = 3;\n\n  const [fields, setFields] = useState({\n    currentStep: minSteps,\n    navigateToAppointments: false,\n    errorMessage: \"\",\n    physician: \"\",\n    service: \"\",\n    startDate: \"\",\n    startTime: \"00:00\",\n    endDate: \"\",\n    endTime: \"00:00\",\n    description: \"\",\n  });\n\n  useEffect(() => {\n    // console.log(\"In use effect\")\n    // console.log(fields)\n    if (fields.service || fields.physician) {\n      setFields((prevFields) => {\n        return {\n          ...fields,\n          currentStep: prevFields.currentStep + 1,\n        };\n      });\n    }\n  }, [fields.physician, fields.service]);\n\n  async function handleChange(e) {\n    setFields({\n      ...fields,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (fields.currentStep === maxSteps) {\n      try {\n        const [startHour, startMinutes] = fields.startTime\n          .split(\":\")\n          .map((t) => parseInt(t));\n        const [endHour, endMinutes] = fields.endTime\n          .split(\":\")\n          .map((t) => parseInt(t));\n\n        const appointmentStartTime = new Date(fields.startDate);\n        appointmentStartTime.setHours(startHour);\n        appointmentStartTime.setMinutes(startMinutes);\n\n        if (!isValidDate(appointmentStartTime)) {\n          throw new Error(\"Invalid Start time. Must be a valid date.\");\n        }\n\n        const appointmentEndTime = new Date(fields.endDate);\n        appointmentEndTime.setHours(endHour);\n        appointmentEndTime.setMinutes(endMinutes);\n\n        if (!isValidDate(appointmentEndTime)) {\n          throw new Error(\"Invalid End time. Must be a valid date.\");\n        }\n\n        if (appointmentEndTime <= appointmentStartTime) {\n          throw new Error(\n            \"Appointment End time cannot be before its Start time.\"\n          );\n        }\n\n        const body = {\n          title: fields.title,\n          patient: props.session.username,\n          physician: fields.physician,\n          serviceId: fields.service,\n          startTime: appointmentStartTime,\n          endTime: appointmentEndTime,\n          description: fields.description,\n        };\n\n        const response = await axios.post(\n          `http://localhost:4090/api/appointments`,\n          body,\n          {\n            credentials: \"same-origin\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${props.session.authToken}`,\n            },\n          }\n        );\n\n        let data = response.data;\n        // console.log(response);\n        if (response.status !== 200 && response.status !== 201) {\n          throw new Error(data.message);\n        }\n\n        setFields({\n          ...fields,\n          navigateToAppointments: true,\n        });\n      } catch (err) {\n        console.error(`Failed to add a new appointment: ${err.message}`);\n        setFields({\n          ...fields,\n          errorMessage: err.message,\n        });\n      }\n    }\n  }\n\n  if (fields.navigateToAppointments === true) {\n    return <Redirect to='/appointments' />;\n  }\n\n  return (\n    <Form className='md-nw-appt' handleSubmit={handleSubmit}>\n      <ProgressBar\n        className='mb-3'\n        value={fields.currentStep}\n        minValue={minSteps}\n        maxValue={maxSteps}\n      />\n      <PhysicianSection\n        currentStep={fields.currentStep}\n        id='newAppt01'\n        session={props.session}\n        name='physician'\n        handleClick={handleChange}\n        physician={fields.physician}\n      />\n      <ServiceSection\n        currentStep={fields.currentStep}\n        id='newAppt02'\n        session={props.session}\n        name='service'\n        handleClick={handleChange}\n        physician={fields.physician}\n      />\n      <InfoSection\n        currentStep={fields.currentStep}\n        session={props.session}\n        handleChange={handleChange}\n        title={fields.title}\n        startDate={fields.startDate}\n        startTime={fields.startTime}\n        endDate={fields.endDate}\n        endTime={fields.endTime}\n        description={fields.description}\n        errorMessage={fields.errorMessage}\n      />\n    </Form>\n  );\n}\n","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/index.js",["419"],[],"import React, { useEffect, useState } from \"react\";\n\nimport UserListView from \"./views/listView\";\nimport UserDetailView from \"./views/detailView\";\nimport axios from \"axios\";\n\nexport default function User(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  // Initialize user by fetching information from server.\n  useEffect(() => {\n    const { username } = props;\n    async function initialize() {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(\n          `http://localhost:4090/api/users/${username}`,\n          {\n            headers: {\n              Authorization: `Bearer ${props.session.authToken}`,\n            },\n          }\n        );\n        // console.log(\"Res back\", response);\n        let data = response.data;\n        if (response.status !== 200) {\n          throw new Error(data.message);\n        }\n\n        setUser(data);\n      } catch (err) {\n        console.error(\n          `Failed to get user information- ${props.username}. ${err}`\n        );\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1000);\n      }\n    }\n\n    initialize();\n  }, [props.username, props.session.authToken]);\n\n  // Now render view.\n  if (props.listView) {\n    return (\n      <UserListView isLoading={isLoading} session={props.session} user={user} />\n    );\n  } else {\n    return (\n      <UserDetailView\n        isLoading={isLoading}\n        session={props.session}\n        user={user}\n      />\n    );\n  }\n}\n","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/physicianSection.js",["420","421"],[],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, FormLabel } from \"../../../../components/form\";\nimport { List, ListButton } from \"../../../../components/lists\";\nimport { AutoLoader } from \"../../../../components/loaders\";\nimport { Username } from \"../../../../components/users\";\nimport { PhysicianItem } from \"./utils\";\nimport axios from \"axios\";\n\nexport default function PhysicianSection(props) {\n  const { id, name, handleClick, ...otherProps } = props;\n\n  const [state, setState] = useState({\n    query: \"\",\n    physicians: [],\n    limit: 25,\n  });\n\n  const getPhysicians = useCallback(\n    async ({ search = \"\", page = 0, limit = 10 }) => {\n      try {\n        const url = `http://localhost:4090/api/users`;\n        const searchParams = new URLSearchParams();\n        searchParams.append(\"view\", \"physician\");\n        searchParams.append(\"search\", search);\n        searchParams.append(\"page\", page);\n        searchParams.append(\"limit\", limit);\n\n        const response = await axios.get(`${url}?${searchParams.toString()}`, {\n          headers: {\n            Authorization: `Bearer ${props.session.authToken}`,\n          },\n        });\n\n        let newPhysicians = await response.data;\n        if (response.status !== 200) {\n          throw new Error(newPhysicians.message);\n        }\n\n        return newPhysicians;\n      } catch (err) {\n        throw err;\n      }\n    }\n  );\n\n  useEffect(() => {\n    async function load() {\n      try {\n        const newPhysicians = await getPhysicians({\n          search: state.query,\n          page: 0,\n          limit: state.limit,\n        });\n\n        setState((prevState) => {\n          return {\n            ...prevState,\n            physicians: [...newPhysicians],\n          };\n        });\n      } catch (err) {\n        // console.log(`Failed to load physicians based on search. ${err}`);\n      }\n    }\n\n    load();\n  }, [state.query, state.limit]);\n\n  async function appendPhysicians() {\n    try {\n      const newPhysicians = await getPhysicians({\n        search: state.query,\n        page: Math.ceil(state.physicians.length / state.limit),\n        limit: state.limit,\n      });\n\n      setState((prevState) => {\n        const updatedPhysicians = [...prevState.physicians, ...newPhysicians];\n        return {\n          ...prevState,\n          physicians: updatedPhysicians,\n        };\n      });\n    } catch (err) {\n      console.error(`Failed to append to physician suggestions. ${err}`);\n    }\n  }\n\n  async function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n      physicians: [],\n    });\n  }\n\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <FormGroup>\n        <FormLabel className='text-muted'>Select a Physician</FormLabel>\n        <input\n          id={id}\n          type='text'\n          className='form-control'\n          name='query'\n          value={state.query}\n          onChange={handleChange}\n          placeholder='Full Name or Username'\n          {...otherProps}\n        />\n      </FormGroup>\n      {state.query.length > 0 && (\n        <FormGroup>\n          <List className='md-list'>\n            {state.physicians.map((physician, index) => (\n              <ListButton\n                key={index}\n                name={name}\n                value={Username({ user: physician })}\n                handleClick={handleClick}>\n                <PhysicianItem\n                  session={props.session}\n                  user={physician}\n                  clickable={true}\n                />\n              </ListButton>\n            ))}\n          </List>\n          <AutoLoader callback={appendPhysicians} />\n        </FormGroup>\n      )}\n    </>\n  );\n}\n","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/infoSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/serviceSection.js",["422","423"],[],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, FormLabel } from \"../../../../components/form\";\nimport { ServiceItem } from \"./utils\";\nimport { AutoLoader, Loader } from \"../../../../components/loaders\";\nimport { List, ListButton } from \"../../../../components/lists\";\nimport axios from \"axios\";\n\nexport default function ServiceSection(props) {\n  const [state, setState] = useState({\n    services: [],\n    limit: 25,\n  });\n\n  const getServices = useCallback(\n    async ({ physician = \"\", page = 0, limit = 10 }) => {\n      try {\n        const url = `http://localhost:4090/api/users/${physician}/services`;\n        const searchParams = new URLSearchParams();\n        searchParams.append(\"page\", page);\n        searchParams.append(\"limit\", limit);\n\n        const response = await axios.get(`${url}?${searchParams.toString()}`, {\n          headers: {\n            Authorization: `Bearer ${props.session.authToken}`,\n          },\n        });\n\n        let newServices = response.data;\n        if (response.status !== 200) {\n          throw new Error(newServices.message);\n        }\n\n        return newServices;\n      } catch (err) {\n        throw err;\n      }\n    }\n  );\n\n  useEffect(() => {\n    async function load() {\n      try {\n        const newServices = await getServices({\n          physician: props.physician,\n          page: 0,\n          limit: state.limit,\n        });\n\n        setState((prevState) => {\n          return {\n            ...prevState,\n            services: [...newServices],\n          };\n        });\n      } catch (err) {\n        // console.log(`Failed to load services for selected physician. ${err}`);\n      }\n    }\n\n    if (props.physician) {\n      load();\n    }\n  }, [props.physician, state.limit]);\n\n  async function appendServices() {\n    try {\n      const newServices = await getServices({\n        physician: props.physician,\n        page: Math.ceil(state.services.length / state.limit),\n        limit: state.limit,\n      });\n\n      setState((prevState) => {\n        const updatedServices = [...prevState.services, ...newServices];\n        return {\n          ...prevState,\n          physicians: updatedServices,\n        };\n      });\n    } catch (err) {\n      // console.log(`Failed to append more services. ${err}`);\n    }\n  }\n\n  if (props.currentStep !== 2) {\n    return null;\n  }\n\n  return (\n    <FormGroup>\n      <FormLabel className='text-muted'>Choose a Service</FormLabel>\n      {state.services.length === 0 ? (\n        <>\n          <Loader isLoading={true} />\n        </>\n      ) : (\n        <>\n          <List className='md-list'>\n            {state.services.map((service, index) => (\n              <ListButton\n                key={index}\n                name={props.name}\n                value={service._id}\n                handleClick={props.handleClick}>\n                <ServiceItem\n                  session={props.session}\n                  service={service}\n                  clickable={true}\n                />\n              </ListButton>\n            ))}\n          </List>\n          <AutoLoader callback={appendServices} />\n        </>\n      )}\n    </FormGroup>\n  );\n}\n","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/progress.js",["424","425","426"],[],"import React from 'react';\nimport { useExtendClass } from '../../../../components/hooks';\n\n\nexport default function ProgressBar(props) {\n    const { value, minValue, maxValue } = props;\n    const className = useExtendClass(\"progress md-nw-appt-pgbar\", props.className);\n\n    var widthRatio = 0;\n    if (value && maxValue) {\n        widthRatio = (value / maxValue) * 100;\n    }\n\n    return (\n        <div class={className}>\n            <div class=\"progress-bar\" role=\"progressbar\" style={{width: `${widthRatio}%`}}\n                aria-valuenow={`${value}`} aria-valuemin={`${minValue}`} aria-valuemax={`${maxValue}`}>\n            </div>\n        </div>\n    );\n}","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/listView.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/listView.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/index.js",["427"],[],"import React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { FluidContainer } from \"../../../../components/layout\";\nimport { Loader } from \"../../../../components/loaders\";\n\nimport TitleBar, { TitleBarLink, TitleBarLinks } from \"../../../home/titleBar\";\nimport MessageWindow from \"./messageWindow\";\nimport SendMessageBar from \"./sendMessage\";\n\nexport default function DetailedView(props) {\n  const [channel, setChannel] = useState(null);\n\n  useEffect(() => {\n    console.log(\"yooo\", props);\n\n    async function reconnect() {\n      console.log(\"Reconnecting chat\");\n      try {\n        if (channel && !channel.connected) {\n          connect();\n        }\n      } catch (err) {\n        console.error(`Failed to reconnect to server. ${err}`);\n      }\n    }\n\n    async function connect() {\n      try {\n        const newChannel = io(\"http://localhost:4090/\");\n\n        newChannel.on(\"connect\", () => {\n          console.log(`Channel connection status: ${newChannel.connected}`);\n        });\n\n        newChannel.on(\"disconnect\", reconnect);\n\n        newChannel.emit(\"join\", { chatId: props.chat._id }, (response) => {\n          if (response.status === \"ok\") {\n            console.log(\"Joined chat session.\");\n          } else {\n            console.log(\"Failed to join chat session.\");\n          }\n        });\n        setChannel(newChannel);\n      } catch (err) {\n        console.error(`Failed to connect to server. ${err}`);\n      }\n    }\n\n    connect();\n    return function disconnect() {\n      async function closeChannel() {\n        try {\n          if (channel) {\n            channel.emit(\"leave\", { chatId: props.chat.id }, (response) => {\n              if (response.status === \"ok\") {\n                console.debug(\"Left chat session.\");\n              } else {\n                // console.log(\"Failed to leave chat session.\");\n              }\n            });\n\n            channel.close();\n            console.debug(`Channel connection status: ${channel.connected}`);\n          }\n\n          // console.log(\"Disconnected from server.\");\n          setChannel(null);\n        } catch (err) {\n          console.error(`Failed to disconnect from server. ${err}`);\n        }\n      }\n\n      closeChannel();\n    };\n  }, [props.chat]);\n\n  return (\n    <FluidContainer className='d-flex flex-column md-chat h-100 px-0'>\n      {props.isLoading ? (\n        <>\n          <Loader isLoading={true} />\n        </>\n      ) : (\n        <>\n          <TitleBar title={props.chat.title}>\n            <TitleBarLinks>\n              <TitleBarLink\n                path={`/appointments/${props.chat.appointmentId}`}\n                title='Go to Appointment'\n                icon='event'\n              />\n            </TitleBarLinks>\n          </TitleBar>\n          <MessageWindow\n            session={props.session}\n            chat={props.chat}\n            channel={channel}\n          />\n          <SendMessageBar\n            session={props.session}\n            chat={props.chat}\n            channel={channel}\n          />\n        </>\n      )}\n    </FluidContainer>\n  );\n}\n","/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/utils.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/utils.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/manageBar.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/sendMessage.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/messageWindow.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/banner.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/banner.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/notes/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/medications/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/medications/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/information/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/services/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/about/index.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/home/subtitleBar.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/notes/addSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/medications/addSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/notes/listSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/views/detailView/medications/listSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/services/addSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/services/listSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/medications/listSection.js",[],[],"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/users/user/views/detailView/about/about.js",[],[],{"ruleId":"428","severity":1,"message":"429","line":69,"column":8,"nodeType":"430","endLine":69,"endColumn":29,"suggestions":"431"},{"ruleId":"428","severity":1,"message":"432","line":39,"column":6,"nodeType":"430","endLine":39,"endColumn":31,"suggestions":"433"},{"ruleId":"428","severity":1,"message":"434","line":40,"column":6,"nodeType":"430","endLine":40,"endColumn":40,"suggestions":"435"},{"ruleId":"428","severity":1,"message":"432","line":44,"column":6,"nodeType":"430","endLine":44,"endColumn":47,"suggestions":"436"},{"ruleId":"428","severity":1,"message":"437","line":18,"column":25,"nodeType":"438","endLine":18,"endColumn":36},{"ruleId":"428","severity":1,"message":"439","line":67,"column":6,"nodeType":"430","endLine":67,"endColumn":32,"suggestions":"440"},{"ruleId":"428","severity":1,"message":"437","line":14,"column":23,"nodeType":"438","endLine":14,"endColumn":34},{"ruleId":"428","severity":1,"message":"441","line":63,"column":6,"nodeType":"430","endLine":63,"endColumn":36,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":17,"column":17,"nodeType":"445","endLine":17,"endColumn":43},{"ruleId":"443","severity":1,"message":"446","line":17,"column":44,"nodeType":"445","endLine":17,"endColumn":73},{"ruleId":"443","severity":1,"message":"447","line":17,"column":74,"nodeType":"445","endLine":17,"endColumn":103},{"ruleId":"428","severity":1,"message":"448","line":76,"column":6,"nodeType":"430","endLine":76,"endColumn":18,"suggestions":"449"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array.","ArrayExpression",["450"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["451"],"React Hook useEffect has a missing dependency: 'fields'. Either include it or remove the dependency array. You can also do a functional update 'setFields(f => ...)' if you only need 'fields' in the 'setFields' call.",["452"],["453"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useEffect has a missing dependency: 'getPhysicians'. Either include it or remove the dependency array.",["454"],"React Hook useEffect has a missing dependency: 'getServices'. Either include it or remove the dependency array.",["455"],"jsx-a11y/aria-proptypes","The value for aria-valuenow must be a number.","JSXAttribute","The value for aria-valuemin must be a number.","The value for aria-valuemax must be a number.","React Hook useEffect has missing dependencies: 'channel' and 'props'. Either include them or remove the dependency array.",["456"],{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},"Update the dependencies array to be: [callback, hasLoaded, isLoading]",{"range":"471","text":"472"},"Update the dependencies array to be: [props, props.id, props.session]",{"range":"473","text":"474"},"Update the dependencies array to be: [fields, fields.physician, fields.service]",{"range":"475","text":"476"},"Update the dependencies array to be: [props.username, props.session.authToken, props]",{"range":"477","text":"478"},"Update the dependencies array to be: [state.query, state.limit, getPhysicians]",{"range":"479","text":"480"},"Update the dependencies array to be: [getServices, props.physician, state.limit]",{"range":"481","text":"482"},"Update the dependencies array to be: [channel, props, props.chat]",{"range":"483","text":"484"},[2293,2314],"[callback, hasLoaded, isLoading]",[1037,1062],"[props, props.id, props.session]",[1067,1101],"[fields, fields.physician, fields.service]",[1180,1221],"[props.username, props.session.authToken, props]",[1902,1928],"[state.query, state.limit, getPhysicians]",[1726,1756],"[getServices, props.physician, state.limit]",[2245,2257],"[channel, props, props.chat]"]