{"ast":null,"code":"var _jsxFileName = \"/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/chats/chat/detailedView/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { FluidContainer } from '../../../../components/layout';\nimport { Loader } from '../../../../components/loaders';\nimport TitleBar, { TitleBarLink, TitleBarLinks } from '../../../home/titleBar';\nimport MessageWindow from './messageWindow';\nimport SendMessageBar from './sendMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DetailedView(props) {\n  _s();\n  const [channel, setChannel] = useState(null);\n  useEffect(() => {\n    console.log(\"yooo\", props);\n    async function reconnect() {\n      console.log(\"Reconnecting chat\");\n      try {\n        if (channel && !channel.connected) {\n          connect();\n        }\n      } catch (err) {\n        console.error(`Failed to reconnect to server. ${err}`);\n      }\n    }\n    async function connect() {\n      try {\n        const newChannel = io(\"http://localhost:4090/\");\n        newChannel.on('connect', () => {\n          console.log(`Channel connection status: ${newChannel.connected}`);\n        });\n        newChannel.on('disconnect', reconnect);\n        newChannel.emit('join', {\n          chatId: props.chat._id\n        }, response => {\n          if (response.status === \"ok\") {\n            console.log(\"Joined chat session.\");\n          } else {\n            console.log(\"Failed to join chat session.\");\n          }\n        });\n        setChannel(newChannel);\n      } catch (err) {\n        console.error(`Failed to connect to server. ${err}`);\n      }\n    }\n    connect();\n    return function disconnect() {\n      async function closeChannel() {\n        try {\n          if (channel) {\n            channel.emit('leave', {\n              chatId: props.chat.id\n            }, response => {\n              if (response.status === \"ok\") {\n                console.debug(\"Left chat session.\");\n              } else {\n                // console.log(\"Failed to leave chat session.\");\n              }\n            });\n            channel.close();\n            console.debug(`Channel connection status: ${channel.connected}`);\n          }\n\n          // console.log(\"Disconnected from server.\");\n          setChannel(null);\n        } catch (err) {\n          console.error(`Failed to disconnect from server. ${err}`);\n        }\n      }\n      closeChannel();\n    };\n  }, [props.chat]);\n  return /*#__PURE__*/_jsxDEV(FluidContainer, {\n    className: \"d-flex flex-column md-chat h-100 px-0\",\n    children: props.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        isLoading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n        title: props.chat.title,\n        children: /*#__PURE__*/_jsxDEV(TitleBarLinks, {\n          children: /*#__PURE__*/_jsxDEV(TitleBarLink, {\n            path: `/appointments/${props.chat.appointmentId}`,\n            title: \"Go to Appointment\",\n            icon: \"event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MessageWindow, {\n        session: props.session,\n        chat: props.chat,\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SendMessageBar, {\n        session: props.session,\n        chat: props.chat,\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(DetailedView, \"LclyaTWB/peX1+M5BmqAAVsV8UU=\");\n_c = DetailedView;\nvar _c;\n$RefreshReg$(_c, \"DetailedView\");","map":{"version":3,"names":["React","useEffect","useState","io","FluidContainer","Loader","TitleBar","TitleBarLink","TitleBarLinks","MessageWindow","SendMessageBar","jsxDEV","_jsxDEV","Fragment","_Fragment","DetailedView","props","_s","channel","setChannel","console","log","reconnect","connected","connect","err","error","newChannel","on","emit","chatId","chat","_id","response","status","disconnect","closeChannel","id","debug","close","className","children","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","title","path","appointmentId","icon","session","_c","$RefreshReg$"],"sources":["/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/chats/chat/detailedView/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { FluidContainer } from '../../../../components/layout';\nimport { Loader } from '../../../../components/loaders';\n\nimport TitleBar, { TitleBarLink, TitleBarLinks } from '../../../home/titleBar';\nimport MessageWindow from './messageWindow';\nimport SendMessageBar from './sendMessage';\n\n\nexport default function DetailedView(props) {\n    const [channel, setChannel] = useState(null);\n\n    useEffect(() => {\n        console.log(\"yooo\", props);\n        \n        async function reconnect() {\n            console.log(\"Reconnecting chat\");\n            try {\n                if (channel && !channel.connected) {\n                    connect();\n                }\n            } catch (err) {\n                console.error(`Failed to reconnect to server. ${err}`);\n            }\n        }\n\n        async function connect() {\n            try {\n                const newChannel = io(\"http://localhost:4090/\");\n\n                newChannel.on('connect', () => {\n                    console.log(`Channel connection status: ${newChannel.connected}`);\n                });\n\n                newChannel.on('disconnect', reconnect);\n\n                newChannel.emit('join',\n                    { chatId: props.chat._id },\n                    (response) => {\n                        if (response.status === \"ok\") {\n                            console.log(\"Joined chat session.\");\n                        } else {\n                            console.log(\"Failed to join chat session.\");\n                        }\n                    }\n                );\n                setChannel(newChannel);\n            } catch (err) {\n                console.error(`Failed to connect to server. ${err}`);\n            }\n        }\n\n        connect();\n        return function disconnect() {\n            async function closeChannel() {\n                try {\n                    if (channel) {\n                        channel.emit('leave',\n                            { chatId: props.chat.id },\n                            (response) => {\n                                if (response.status === \"ok\") {\n                                    console.debug(\"Left chat session.\");\n                                } else {\n                                    // console.log(\"Failed to leave chat session.\");\n                                }\n                            }\n                        );\n\n                        channel.close();\n                        console.debug(`Channel connection status: ${channel.connected}`);\n                    }\n\n                    // console.log(\"Disconnected from server.\");\n                    setChannel(null);\n                } catch (err) {\n                    console.error(`Failed to disconnect from server. ${err}`);\n                }\n            }\n\n            closeChannel();\n        }\n    }, [props.chat]);\n\n    return (\n        <FluidContainer className=\"d-flex flex-column md-chat h-100 px-0\">\n            {\n                (props.isLoading) ?\n                <>\n                    <Loader isLoading={true} />\n                </> :\n                <>\n                    <TitleBar title={props.chat.title} >\n                        <TitleBarLinks>\n                            <TitleBarLink\n                                path={`/appointments/${props.chat.appointmentId}`}\n                                title=\"Go to Appointment\"\n                                icon=\"event\"\n                            />\n                        </TitleBarLinks>\n                    </TitleBar>\n                    <MessageWindow \n                        session={props.session}\n                        chat={props.chat}\n                        channel={channel}\n                    />\n                    <SendMessageBar\n                        session={props.session}\n                        chat={props.chat}\n                        channel={channel}\n                    />\n                </>\n            }\n        </FluidContainer>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}