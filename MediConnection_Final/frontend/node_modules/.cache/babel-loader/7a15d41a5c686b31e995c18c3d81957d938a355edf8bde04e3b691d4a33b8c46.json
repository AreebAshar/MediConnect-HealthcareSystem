{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/index.js\",\n  _s = $RefreshSig$();\nimport React, { lazy, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { Loader } from '../../components/loaders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentView = /*#__PURE__*/lazy(_c = () => import(\"./views/appointment\"));\n_c2 = AppointmentView;\nconst AllAppointmentsView = /*#__PURE__*/lazy(_c3 = () => import(\"./views/allAppointments\"));\n_c4 = AllAppointmentsView;\nconst WaitingRoomView = /*#__PURE__*/lazy(_c5 = () => import('./views/waitingRoom'));\n_c6 = WaitingRoomView;\nconst NewAppointmentView = /*#__PURE__*/lazy(_c7 = () => import('./views/newAppointment'));\n_c8 = NewAppointmentView;\nexport default function AppointmentApp(props) {\n  _s();\n  const session = useSelector(s => s.session);\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Loader, {\n      isLoading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: `${props.match.path}/:id`,\n        render: props => /*#__PURE__*/_jsxDEV(AppointmentView, {\n          ...props,\n          id: props.match.params.id,\n          session: session\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"\",\n        render: props => {\n          if (props.location.search) {\n            let searchParams = new URLSearchParams(props.location.search);\n            if (searchParams.has(\"view\")) {\n              const viewName = searchParams.get(\"view\");\n              if (viewName === \"new\") {\n                return /*#__PURE__*/_jsxDEV(NewAppointmentView, {\n                  ...props,\n                  session: session\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 41\n                }, this);\n              } else if (viewName === \"waiting\") {\n                return /*#__PURE__*/_jsxDEV(WaitingRoomView, {\n                  ...props,\n                  session: session\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 41\n                }, this);\n              }\n            }\n          }\n          return /*#__PURE__*/_jsxDEV(AllAppointmentsView, {\n            ...props,\n            session: session\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(AppointmentApp, \"jErn8fCBxd9g2WHb3RYdTUQmINI=\", false, function () {\n  return [useSelector];\n});\n_c9 = AppointmentApp;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AppointmentView$lazy\");\n$RefreshReg$(_c2, \"AppointmentView\");\n$RefreshReg$(_c3, \"AllAppointmentsView$lazy\");\n$RefreshReg$(_c4, \"AllAppointmentsView\");\n$RefreshReg$(_c5, \"WaitingRoomView$lazy\");\n$RefreshReg$(_c6, \"WaitingRoomView\");\n$RefreshReg$(_c7, \"NewAppointmentView$lazy\");\n$RefreshReg$(_c8, \"NewAppointmentView\");\n$RefreshReg$(_c9, \"AppointmentApp\");","map":{"version":3,"names":["React","lazy","Suspense","useSelector","Route","Switch","Loader","jsxDEV","_jsxDEV","AppointmentView","_c","_c2","AllAppointmentsView","_c3","_c4","WaitingRoomView","_c5","_c6","NewAppointmentView","_c7","_c8","AppointmentApp","props","_s","session","s","fallback","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","children","path","match","render","id","params","location","search","searchParams","URLSearchParams","has","viewName","get","_c9","$RefreshReg$"],"sources":["/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/index.js"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { Loader } from '../../components/loaders';\n\nconst AppointmentView = lazy(() => import(\"./views/appointment\"));\nconst AllAppointmentsView = lazy(() => import(\"./views/allAppointments\"));\nconst WaitingRoomView = lazy(() => import('./views/waitingRoom'));\nconst NewAppointmentView = lazy(() => import('./views/newAppointment'));\n\n\nexport default function AppointmentApp(props) {\n    const session = useSelector(s => s.session);\n\n    return (\n        <Suspense fallback={<Loader isLoading={true} />}>\n            <Switch>\n                <Route\n                    path={`${props.match.path}/:id`}\n                    render={(props) => (\n                        <AppointmentView\n                            {...props} \n                            id={props.match.params.id}\n                            session={session}\n                        />\n                    )}\n                />\n                <Route\n                    path=\"\"\n                    render={(props) => {\n                        if (props.location.search) {\n                            let searchParams = new URLSearchParams(props.location.search);\n\n                            if (searchParams.has(\"view\")) {\n                                const viewName = searchParams.get(\"view\");\n\n                                if (viewName === \"new\") {\n                                    return (\n                                        <NewAppointmentView {...props} session={session} />\n                                    );\n                                } else if (viewName === \"waiting\") {\n                                    return (\n                                        <WaitingRoomView {...props} session={session} />\n                                    );\n                                }\n                            }\n                        }\n\n                        return (\n                            <AllAppointmentsView {...props} session={session} />\n                        );\n                    }}\n                />\n            </Switch>\n        </Suspense>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}