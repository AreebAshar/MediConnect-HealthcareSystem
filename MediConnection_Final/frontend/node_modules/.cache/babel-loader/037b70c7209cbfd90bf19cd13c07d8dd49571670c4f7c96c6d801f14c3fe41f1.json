{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/Medico/frontend/src/containers/appointments/views/newAppointment/serviceSection.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, FormLabel } from \"../../../../components/form\";\nimport { ServiceItem } from \"./utils\";\nimport { AutoLoader, Loader } from \"../../../../components/loaders\";\nimport { List, ListButton } from \"../../../../components/lists\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ServiceSection(props) {\n  _s();\n  const [state, setState] = useState({\n    services: [],\n    limit: 25\n  });\n  const getServices = useCallback(async _ref => {\n    let {\n      physician = \"\",\n      page = 0,\n      limit = 10\n    } = _ref;\n    try {\n      const url = `http://localhost:4090/api/users/${physician}/services`;\n      const searchParams = new URLSearchParams();\n      searchParams.append(\"page\", page);\n      searchParams.append(\"limit\", limit);\n      const response = await axios.get(`${url}?${searchParams.toString()}`, {\n        headers: {\n          Authorization: `Bearer ${props.session.authToken}`\n        }\n      });\n      let newServices = response.data;\n      if (response.status !== 200) {\n        throw new Error(newServices.message);\n      }\n      return newServices;\n    } catch (err) {\n      throw err;\n    }\n  });\n  useEffect(() => {\n    async function load() {\n      try {\n        const newServices = await getServices({\n          physician: props.physician,\n          page: 0,\n          limit: state.limit\n        });\n        setState(prevState => {\n          return {\n            ...prevState,\n            services: [...newServices]\n          };\n        });\n      } catch (err) {\n        // console.log(`Failed to load services for selected physician. ${err}`);\n      }\n    }\n    if (props.physician) {\n      load();\n    }\n  }, [props.physician, state.limit]);\n  async function appendServices() {\n    try {\n      const newServices = await getServices({\n        physician: props.physician,\n        page: Math.ceil(state.services.length / state.limit),\n        limit: state.limit\n      });\n      setState(prevState => {\n        const updatedServices = [...prevState.services, ...newServices];\n        return {\n          ...prevState,\n          physicians: updatedServices\n        };\n      });\n    } catch (err) {\n      // console.log(`Failed to append more services. ${err}`);\n    }\n  }\n  if (props.currentStep !== 2) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      className: \"text-muted\",\n      children: \"Choose a Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), state.services.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        isLoading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        className: \"md-list\",\n        children: state.services.map((service, index) => /*#__PURE__*/_jsxDEV(ListButton, {\n          name: props.name,\n          value: service._id,\n          handleClick: props.handleClick,\n          children: /*#__PURE__*/_jsxDEV(ServiceItem, {\n            session: props.session,\n            service: service,\n            clickable: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoLoader, {\n        callback: appendServices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceSection, \"P6E52R40nY572z9tzAjd+UFqqnM=\");\n_c = ServiceSection;\nvar _c;\n$RefreshReg$(_c, \"ServiceSection\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","FormGroup","FormLabel","ServiceItem","AutoLoader","Loader","List","ListButton","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ServiceSection","props","_s","state","setState","services","limit","getServices","_ref","physician","page","url","searchParams","URLSearchParams","append","response","get","toString","headers","Authorization","session","authToken","newServices","data","status","Error","message","err","load","prevState","appendServices","Math","ceil","length","updatedServices","physicians","currentStep","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isLoading","map","service","index","name","value","_id","handleClick","clickable","callback","_c","$RefreshReg$"],"sources":["/Users/ray/Desktop/Medico/frontend/src/containers/appointments/views/newAppointment/serviceSection.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormGroup, FormLabel } from \"../../../../components/form\";\nimport { ServiceItem } from \"./utils\";\nimport { AutoLoader, Loader } from \"../../../../components/loaders\";\nimport { List, ListButton } from \"../../../../components/lists\";\nimport axios from \"axios\";\n\nexport default function ServiceSection(props) {\n  const [state, setState] = useState({\n    services: [],\n    limit: 25,\n  });\n\n  const getServices = useCallback(\n    async ({ physician = \"\", page = 0, limit = 10 }) => {\n      try {\n        const url = `http://localhost:4090/api/users/${physician}/services`;\n        const searchParams = new URLSearchParams();\n        searchParams.append(\"page\", page);\n        searchParams.append(\"limit\", limit);\n\n        const response = await axios.get(`${url}?${searchParams.toString()}`, {\n          headers: {\n            Authorization: `Bearer ${props.session.authToken}`,\n          },\n        });\n\n        let newServices = response.data;\n        if (response.status !== 200) {\n          throw new Error(newServices.message);\n        }\n\n        return newServices;\n      } catch (err) {\n        throw err;\n      }\n    }\n  );\n\n  useEffect(() => {\n    async function load() {\n      try {\n        const newServices = await getServices({\n          physician: props.physician,\n          page: 0,\n          limit: state.limit,\n        });\n\n        setState((prevState) => {\n          return {\n            ...prevState,\n            services: [...newServices],\n          };\n        });\n      } catch (err) {\n        // console.log(`Failed to load services for selected physician. ${err}`);\n      }\n    }\n\n    if (props.physician) {\n      load();\n    }\n  }, [props.physician, state.limit]);\n\n  async function appendServices() {\n    try {\n      const newServices = await getServices({\n        physician: props.physician,\n        page: Math.ceil(state.services.length / state.limit),\n        limit: state.limit,\n      });\n\n      setState((prevState) => {\n        const updatedServices = [...prevState.services, ...newServices];\n        return {\n          ...prevState,\n          physicians: updatedServices,\n        };\n      });\n    } catch (err) {\n      // console.log(`Failed to append more services. ${err}`);\n    }\n  }\n\n  if (props.currentStep !== 2) {\n    return null;\n  }\n\n  return (\n    <FormGroup>\n      <FormLabel className='text-muted'>Choose a Service</FormLabel>\n      {state.services.length === 0 ? (\n        <>\n          <Loader isLoading={true} />\n        </>\n      ) : (\n        <>\n          <List className='md-list'>\n            {state.services.map((service, index) => (\n              <ListButton\n                key={index}\n                name={props.name}\n                value={service._id}\n                handleClick={props.handleClick}>\n                <ServiceItem\n                  session={props.session}\n                  service={service}\n                  clickable={true}\n                />\n              </ListButton>\n            ))}\n          </List>\n          <AutoLoader callback={appendServices} />\n        </>\n      )}\n    </FormGroup>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}