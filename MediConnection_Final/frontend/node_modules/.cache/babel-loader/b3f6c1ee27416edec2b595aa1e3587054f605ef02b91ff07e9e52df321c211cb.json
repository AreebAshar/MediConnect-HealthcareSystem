{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { FluidContainer } from \"../../../../components/layout\";\nimport { Loader } from \"../../../../components/loaders\";\nimport TitleBar, { TitleBarLink, TitleBarLinks } from \"../../../home/titleBar\";\nimport MessageWindow from \"./messageWindow\";\nimport SendMessageBar from \"./sendMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DetailedView(props) {\n  _s();\n  const [channel, setChannel] = useState(null);\n  useEffect(() => {\n    console.log(\"yooo\", props);\n    async function reconnect() {\n      console.log(\"Reconnecting chat\");\n      try {\n        if (channel && !channel.connected) {\n          connect();\n        }\n      } catch (err) {\n        console.error(`Failed to reconnect to server. ${err}`);\n      }\n    }\n    async function connect() {\n      try {\n        const newChannel = io(\"http://localhost:4090/\");\n        newChannel.on(\"connect\", () => {\n          console.log(`Channel connection status: ${newChannel.connected}`);\n        });\n        newChannel.on(\"disconnect\", reconnect);\n        newChannel.emit(\"join\", {\n          chatId: props.chat._id\n        }, response => {\n          if (response.status === \"ok\") {\n            console.log(\"Joined chat session.\");\n          } else {\n            console.log(\"Failed to join chat session.\");\n          }\n        });\n        setChannel(newChannel);\n      } catch (err) {\n        console.error(`Failed to connect to server. ${err}`);\n      }\n    }\n    connect();\n    return function disconnect() {\n      async function closeChannel() {\n        try {\n          if (channel) {\n            channel.emit(\"leave\", {\n              chatId: props.chat.id\n            }, response => {\n              if (response.status === \"ok\") {\n                console.debug(\"Left chat session.\");\n              } else {\n                // console.log(\"Failed to leave chat session.\");\n              }\n            });\n            channel.close();\n            console.debug(`Channel connection status: ${channel.connected}`);\n          }\n\n          // console.log(\"Disconnected from server.\");\n          setChannel(null);\n        } catch (err) {\n          console.error(`Failed to disconnect from server. ${err}`);\n        }\n      }\n      closeChannel();\n    };\n  }, [props.chat]);\n  return /*#__PURE__*/_jsxDEV(FluidContainer, {\n    className: \"d-flex flex-column md-chat h-100 px-0\",\n    children: props.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        isLoading: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n        title: props.chat.title,\n        children: /*#__PURE__*/_jsxDEV(TitleBarLinks, {\n          children: /*#__PURE__*/_jsxDEV(TitleBarLink, {\n            path: `/appointments/${props.chat.appointmentId}`,\n            title: \"Go to Appointment\",\n            icon: \"event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageWindow, {\n        session: props.session,\n        chat: props.chat,\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SendMessageBar, {\n        session: props.session,\n        chat: props.chat,\n        channel: channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailedView, \"LclyaTWB/peX1+M5BmqAAVsV8UU=\");\n_c = DetailedView;\nvar _c;\n$RefreshReg$(_c, \"DetailedView\");","map":{"version":3,"names":["React","useEffect","useState","io","FluidContainer","Loader","TitleBar","TitleBarLink","TitleBarLinks","MessageWindow","SendMessageBar","jsxDEV","_jsxDEV","Fragment","_Fragment","DetailedView","props","_s","channel","setChannel","console","log","reconnect","connected","connect","err","error","newChannel","on","emit","chatId","chat","_id","response","status","disconnect","closeChannel","id","debug","close","className","children","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","title","path","appointmentId","icon","session","_c","$RefreshReg$"],"sources":["/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { FluidContainer } from \"../../../../components/layout\";\nimport { Loader } from \"../../../../components/loaders\";\n\nimport TitleBar, { TitleBarLink, TitleBarLinks } from \"../../../home/titleBar\";\nimport MessageWindow from \"./messageWindow\";\nimport SendMessageBar from \"./sendMessage\";\n\nexport default function DetailedView(props) {\n  const [channel, setChannel] = useState(null);\n\n  useEffect(() => {\n    console.log(\"yooo\", props);\n\n    async function reconnect() {\n      console.log(\"Reconnecting chat\");\n      try {\n        if (channel && !channel.connected) {\n          connect();\n        }\n      } catch (err) {\n        console.error(`Failed to reconnect to server. ${err}`);\n      }\n    }\n\n    async function connect() {\n      try {\n        const newChannel = io(\"http://localhost:4090/\");\n\n        newChannel.on(\"connect\", () => {\n          console.log(`Channel connection status: ${newChannel.connected}`);\n        });\n\n        newChannel.on(\"disconnect\", reconnect);\n\n        newChannel.emit(\"join\", { chatId: props.chat._id }, (response) => {\n          if (response.status === \"ok\") {\n            console.log(\"Joined chat session.\");\n          } else {\n            console.log(\"Failed to join chat session.\");\n          }\n        });\n        setChannel(newChannel);\n      } catch (err) {\n        console.error(`Failed to connect to server. ${err}`);\n      }\n    }\n\n    connect();\n    return function disconnect() {\n      async function closeChannel() {\n        try {\n          if (channel) {\n            channel.emit(\"leave\", { chatId: props.chat.id }, (response) => {\n              if (response.status === \"ok\") {\n                console.debug(\"Left chat session.\");\n              } else {\n                // console.log(\"Failed to leave chat session.\");\n              }\n            });\n\n            channel.close();\n            console.debug(`Channel connection status: ${channel.connected}`);\n          }\n\n          // console.log(\"Disconnected from server.\");\n          setChannel(null);\n        } catch (err) {\n          console.error(`Failed to disconnect from server. ${err}`);\n        }\n      }\n\n      closeChannel();\n    };\n  }, [props.chat]);\n\n  return (\n    <FluidContainer className='d-flex flex-column md-chat h-100 px-0'>\n      {props.isLoading ? (\n        <>\n          <Loader isLoading={true} />\n        </>\n      ) : (\n        <>\n          <TitleBar title={props.chat.title}>\n            <TitleBarLinks>\n              <TitleBarLink\n                path={`/appointments/${props.chat.appointmentId}`}\n                title='Go to Appointment'\n                icon='event'\n              />\n            </TitleBarLinks>\n          </TitleBar>\n          <MessageWindow\n            session={props.session}\n            chat={props.chat}\n            channel={channel}\n          />\n          <SendMessageBar\n            session={props.session}\n            chat={props.chat}\n            channel={channel}\n          />\n        </>\n      )}\n    </FluidContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}