{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/newAppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form } from \"../../../../components/form\";\nimport { isValidDate } from \"../../../../components/dates\";\nimport ProgressBar from \"./progress\";\nimport PhysicianSection from \"./physicianSection\";\nimport ServiceSection from \"./serviceSection\";\nimport InfoSection from \"./infoSection\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewAppointmentForm(props) {\n  _s();\n  const minSteps = 1;\n  const maxSteps = 3;\n  const [fields, setFields] = useState({\n    currentStep: minSteps,\n    navigateToAppointments: false,\n    errorMessage: \"\",\n    physician: \"\",\n    service: \"\",\n    startDate: \"\",\n    startTime: \"00:00\",\n    endDate: \"\",\n    endTime: \"00:00\",\n    description: \"\"\n  });\n  useEffect(() => {\n    // console.log(\"In use effect\")\n    // console.log(fields)\n    if (fields.service || fields.physician) {\n      setFields(prevFields => {\n        return {\n          ...fields,\n          currentStep: prevFields.currentStep + 1\n        };\n      });\n    }\n  }, [fields.physician, fields.service]);\n  async function handleChange(e) {\n    setFields({\n      ...fields,\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (fields.currentStep === maxSteps) {\n      try {\n        const [startHour, startMinutes] = fields.startTime.split(\":\").map(t => parseInt(t));\n        const [endHour, endMinutes] = fields.endTime.split(\":\").map(t => parseInt(t));\n        const appointmentStartTime = new Date(fields.startDate);\n        appointmentStartTime.setHours(startHour);\n        appointmentStartTime.setMinutes(startMinutes);\n        if (!isValidDate(appointmentStartTime)) {\n          throw new Error(\"Invalid Start time. Must be a valid date.\");\n        }\n        const appointmentEndTime = new Date(fields.endDate);\n        appointmentEndTime.setHours(endHour);\n        appointmentEndTime.setMinutes(endMinutes);\n        if (!isValidDate(appointmentEndTime)) {\n          throw new Error(\"Invalid End time. Must be a valid date.\");\n        }\n        if (appointmentEndTime <= appointmentStartTime) {\n          throw new Error(\"Appointment End time cannot be before its Start time.\");\n        }\n        const body = {\n          title: fields.title,\n          patient: props.session.username,\n          physician: fields.physician,\n          serviceId: fields.service,\n          startTime: appointmentStartTime,\n          endTime: appointmentEndTime,\n          description: fields.description\n        };\n        const response = await axios.post(`http://localhost:4090/api/appointments`, body, {\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${props.session.authToken}`\n          }\n        });\n        let data = response.data;\n        // console.log(response);\n        if (response.status !== 200 && response.status !== 201) {\n          throw new Error(data.message);\n        }\n        setFields({\n          ...fields,\n          navigateToAppointments: true\n        });\n      } catch (err) {\n        console.error(`Failed to add a new appointment: ${err.message}`);\n        setFields({\n          ...fields,\n          errorMessage: err.message\n        });\n      }\n    }\n  }\n  if (fields.navigateToAppointments === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"md-nw-appt\",\n    handleSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      className: \"mb-3\",\n      value: fields.currentStep,\n      minValue: minSteps,\n      maxValue: maxSteps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PhysicianSection, {\n      currentStep: fields.currentStep,\n      id: \"newAppt01\",\n      session: props.session,\n      name: \"physician\",\n      handleClick: handleChange,\n      physician: fields.physician\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ServiceSection, {\n      currentStep: fields.currentStep,\n      id: \"newAppt02\",\n      session: props.session,\n      name: \"service\",\n      handleClick: handleChange,\n      physician: fields.physician\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoSection, {\n      currentStep: fields.currentStep,\n      session: props.session,\n      handleChange: handleChange,\n      title: fields.title,\n      startDate: fields.startDate,\n      startTime: fields.startTime,\n      endDate: fields.endDate,\n      endTime: fields.endTime,\n      description: fields.description,\n      errorMessage: fields.errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(NewAppointmentForm, \"2wrBwSCkz2KFl9Yui2MmDu9r6mQ=\");\n_c = NewAppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"NewAppointmentForm\");","map":{"version":3,"names":["React","useEffect","useState","Redirect","Form","isValidDate","ProgressBar","PhysicianSection","ServiceSection","InfoSection","axios","jsxDEV","_jsxDEV","NewAppointmentForm","props","_s","minSteps","maxSteps","fields","setFields","currentStep","navigateToAppointments","errorMessage","physician","service","startDate","startTime","endDate","endTime","description","prevFields","handleChange","e","currentTarget","name","value","handleSubmit","preventDefault","startHour","startMinutes","split","map","t","parseInt","endHour","endMinutes","appointmentStartTime","Date","setHours","setMinutes","Error","appointmentEndTime","body","title","patient","session","username","serviceId","response","post","credentials","headers","Authorization","authToken","data","status","message","err","console","error","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","minValue","maxValue","id","handleClick","_c","$RefreshReg$"],"sources":["/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/views/newAppointment/newAppointmentForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form } from \"../../../../components/form\";\nimport { isValidDate } from \"../../../../components/dates\";\n\nimport ProgressBar from \"./progress\";\nimport PhysicianSection from \"./physicianSection\";\nimport ServiceSection from \"./serviceSection\";\nimport InfoSection from \"./infoSection\";\nimport axios from \"axios\";\n\nexport default function NewAppointmentForm(props) {\n  const minSteps = 1;\n  const maxSteps = 3;\n\n  const [fields, setFields] = useState({\n    currentStep: minSteps,\n    navigateToAppointments: false,\n    errorMessage: \"\",\n    physician: \"\",\n    service: \"\",\n    startDate: \"\",\n    startTime: \"00:00\",\n    endDate: \"\",\n    endTime: \"00:00\",\n    description: \"\",\n  });\n\n  useEffect(() => {\n    // console.log(\"In use effect\")\n    // console.log(fields)\n    if (fields.service || fields.physician) {\n      setFields((prevFields) => {\n        return {\n          ...fields,\n          currentStep: prevFields.currentStep + 1,\n        };\n      });\n    }\n  }, [fields.physician, fields.service]);\n\n  async function handleChange(e) {\n    setFields({\n      ...fields,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (fields.currentStep === maxSteps) {\n      try {\n        const [startHour, startMinutes] = fields.startTime\n          .split(\":\")\n          .map((t) => parseInt(t));\n        const [endHour, endMinutes] = fields.endTime\n          .split(\":\")\n          .map((t) => parseInt(t));\n\n        const appointmentStartTime = new Date(fields.startDate);\n        appointmentStartTime.setHours(startHour);\n        appointmentStartTime.setMinutes(startMinutes);\n\n        if (!isValidDate(appointmentStartTime)) {\n          throw new Error(\"Invalid Start time. Must be a valid date.\");\n        }\n\n        const appointmentEndTime = new Date(fields.endDate);\n        appointmentEndTime.setHours(endHour);\n        appointmentEndTime.setMinutes(endMinutes);\n\n        if (!isValidDate(appointmentEndTime)) {\n          throw new Error(\"Invalid End time. Must be a valid date.\");\n        }\n\n        if (appointmentEndTime <= appointmentStartTime) {\n          throw new Error(\n            \"Appointment End time cannot be before its Start time.\"\n          );\n        }\n\n        const body = {\n          title: fields.title,\n          patient: props.session.username,\n          physician: fields.physician,\n          serviceId: fields.service,\n          startTime: appointmentStartTime,\n          endTime: appointmentEndTime,\n          description: fields.description,\n        };\n\n        const response = await axios.post(\n          `http://localhost:4090/api/appointments`,\n          body,\n          {\n            credentials: \"same-origin\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${props.session.authToken}`,\n            },\n          }\n        );\n\n        let data = response.data;\n        // console.log(response);\n        if (response.status !== 200 && response.status !== 201) {\n          throw new Error(data.message);\n        }\n\n        setFields({\n          ...fields,\n          navigateToAppointments: true,\n        });\n      } catch (err) {\n        console.error(`Failed to add a new appointment: ${err.message}`);\n        setFields({\n          ...fields,\n          errorMessage: err.message,\n        });\n      }\n    }\n  }\n\n  if (fields.navigateToAppointments === true) {\n    return <Redirect to='/appointments' />;\n  }\n\n  return (\n    <Form className='md-nw-appt' handleSubmit={handleSubmit}>\n      <ProgressBar\n        className='mb-3'\n        value={fields.currentStep}\n        minValue={minSteps}\n        maxValue={maxSteps}\n      />\n      <PhysicianSection\n        currentStep={fields.currentStep}\n        id='newAppt01'\n        session={props.session}\n        name='physician'\n        handleClick={handleChange}\n        physician={fields.physician}\n      />\n      <ServiceSection\n        currentStep={fields.currentStep}\n        id='newAppt02'\n        session={props.session}\n        name='service'\n        handleClick={handleChange}\n        physician={fields.physician}\n      />\n      <InfoSection\n        currentStep={fields.currentStep}\n        session={props.session}\n        handleChange={handleChange}\n        title={fields.title}\n        startDate={fields.startDate}\n        startTime={fields.startTime}\n        endDate={fields.endDate}\n        endTime={fields.endTime}\n        description={fields.description}\n        errorMessage={fields.errorMessage}\n      />\n    </Form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}