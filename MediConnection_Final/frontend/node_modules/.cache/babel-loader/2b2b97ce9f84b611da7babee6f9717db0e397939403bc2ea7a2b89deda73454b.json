{"ast":null,"code":"export function loadSession() {\n  try {\n    const serializedState = sessionStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    // console.log(`Failed to load app state from session. ${err}`);\n    return undefined;\n  }\n}\nexport function saveSession(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem(\"state\", serializedState);\n  } catch (err) {\n    // console.log(`Failed to save app state within session. ${err}`);\n  }\n}","map":{"version":3,"names":["loadSession","serializedState","sessionStorage","getItem","undefined","JSON","parse","err","saveSession","state","stringify","setItem"],"sources":["/Users/ray/Desktop/MediConnection_Final/frontend/src/store/sessionStorage.js"],"sourcesContent":["\n\nexport function loadSession() {\n    try {\n        const serializedState = sessionStorage.getItem(\"state\");\n\n        if (serializedState === null) {\n            return undefined;\n        }\n\n        return JSON.parse(serializedState);\n    } catch (err) {\n        // console.log(`Failed to load app state from session. ${err}`);\n        return undefined;\n    }\n}\n\n\nexport function saveSession(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        // console.log(`Failed to save app state within session. ${err}`);\n    }\n}\n"],"mappings":"AAEA,OAAO,SAASA,WAAWA,CAAA,EAAG;EAC1B,IAAI;IACA,MAAMC,eAAe,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAEvD,IAAIF,eAAe,KAAK,IAAI,EAAE;MAC1B,OAAOG,SAAS;IACpB;IAEA,OAAOC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;EACtC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACV;IACA,OAAOH,SAAS;EACpB;AACJ;AAGA,OAAO,SAASI,WAAWA,CAACC,KAAK,EAAE;EAC/B,IAAI;IACA,MAAMR,eAAe,GAAGI,IAAI,CAACK,SAAS,CAACD,KAAK,CAAC;IAC7CP,cAAc,CAACS,OAAO,CAAC,OAAO,EAAEV,eAAe,CAAC;EACpD,CAAC,CAAC,OAAOM,GAAG,EAAE;IACV;EAAA;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}