{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AppointmentListView from \"./views/listView\";\nimport AppointmentDetailView from \"./views/detailView\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Appointment(props) {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [appointment, setAppointment] = useState({});\n\n  // Initialize appointment by fetching appointment information.\n  useEffect(() => {\n    // console.log(\"here\");\n    async function initialize() {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`http://localhost:4090/api/appointments/${props.id}`, {\n          headers: {\n            Authorization: `Bearer ${props.session.authToken}`\n          }\n        });\n        // console.log(response);\n        let data = await response.data;\n        if (response.status !== 200) {\n          throw new Error(data.message);\n        }\n        setAppointment(data);\n      } catch (err) {\n        console.error(`Failed to get appointment information- ${props.id}. ${err}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    initialize();\n  }, [props.id, props.session]);\n  async function handleStatus(e) {\n    e.preventDefault();\n    try {\n      const newStatus = e.currentTarget.value;\n      const body = {\n        status: newStatus\n      };\n      const response = await axios.put(`http://localhost:4090/api/appointments/${props.id}`, body, {\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${props.session.authToken}`\n        }\n      });\n      let data = await response.data;\n      if (response.status !== 200) {\n        throw new Error(data.message);\n      }\n      setAppointment(prevState => {\n        return {\n          ...prevState,\n          status: newStatus\n        };\n      });\n    } catch (err) {\n      console.error(`Failed to update status for appointment- ${props.id}. ${err}`);\n    }\n  }\n  async function handleDelete(e) {\n    e.preventDefault();\n    try {\n      const response = await axios.delete(`http://localhost:4090/api/appointments/${props.id}`, {\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${props.session.authToken}`\n        }\n      });\n      let data = await response.data;\n      if (response.status !== 200) {\n        throw new Error(data.message);\n      }\n      if (props.deleteAppointment) {\n        await props.deleteAppointment(props.id);\n      }\n    } catch (err) {\n      // console.log(`Failed to delete appointment- ${props.id}. ${err}`);\n    }\n  }\n  async function updatePaymentBalance(newPaymentBalance) {\n    setAppointment({\n      ...appointment,\n      paymentBalance: newPaymentBalance\n    });\n  }\n  if (props.listView) {\n    return /*#__PURE__*/_jsxDEV(AppointmentListView, {\n      isLoading: isLoading,\n      session: props.session,\n      appointment: appointment,\n      handleStatus: handleStatus,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(AppointmentDetailView, {\n      isLoading: isLoading,\n      session: props.session,\n      appointment: appointment,\n      handleStatus: handleStatus,\n      handleDelete: handleDelete,\n      updatePayment: updatePaymentBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Appointment, \"ndKtBuqy8A5yhjyi1LC2oixq79Q=\");\n_c = Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["React","useEffect","useState","AppointmentListView","AppointmentDetailView","axios","jsxDEV","_jsxDEV","Appointment","props","_s","isLoading","setIsLoading","appointment","setAppointment","initialize","response","get","id","headers","Authorization","session","authToken","data","status","Error","message","err","console","error","handleStatus","e","preventDefault","newStatus","currentTarget","value","body","put","credentials","prevState","handleDelete","delete","deleteAppointment","updatePaymentBalance","newPaymentBalance","paymentBalance","listView","fileName","_jsxFileName","lineNumber","columnNumber","updatePayment","_c","$RefreshReg$"],"sources":["/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/appointments/appointment/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport AppointmentListView from \"./views/listView\";\nimport AppointmentDetailView from \"./views/detailView\";\nimport axios from \"axios\";\n\nexport default function Appointment(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [appointment, setAppointment] = useState({});\n\n  // Initialize appointment by fetching appointment information.\n  useEffect(() => {\n    // console.log(\"here\");\n    async function initialize() {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(\n          `http://localhost:4090/api/appointments/${props.id}`,\n          {\n            headers: {\n              Authorization: `Bearer ${props.session.authToken}`,\n            },\n          }\n        );\n        // console.log(response);\n        let data = await response.data;\n        if (response.status !== 200) {\n          throw new Error(data.message);\n        }\n        setAppointment(data);\n      } catch (err) {\n        console.error(\n          `Failed to get appointment information- ${props.id}. ${err}`\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    initialize();\n  }, [props.id, props.session]);\n\n  async function handleStatus(e) {\n    e.preventDefault();\n    try {\n      const newStatus = e.currentTarget.value;\n      const body = { status: newStatus };\n\n      const response = await axios.put(\n        `http://localhost:4090/api/appointments/${props.id}`,\n        body,\n        {\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${props.session.authToken}`,\n          },\n        }\n      );\n\n      let data = await response.data;\n      if (response.status !== 200) {\n        throw new Error(data.message);\n      }\n\n      setAppointment((prevState) => {\n        return {\n          ...prevState,\n          status: newStatus,\n        };\n      });\n    } catch (err) {\n      console.error(\n        `Failed to update status for appointment- ${props.id}. ${err}`\n      );\n    }\n  }\n\n  async function handleDelete(e) {\n    e.preventDefault();\n    try {\n      const response = await axios.delete(\n        `http://localhost:4090/api/appointments/${props.id}`,\n        {\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${props.session.authToken}`,\n          },\n        }\n      );\n\n      let data = await response.data;\n      if (response.status !== 200) {\n        throw new Error(data.message);\n      }\n\n      if (props.deleteAppointment) {\n        await props.deleteAppointment(props.id);\n      }\n    } catch (err) {\n      // console.log(`Failed to delete appointment- ${props.id}. ${err}`);\n    }\n  }\n\n  async function updatePaymentBalance(newPaymentBalance) {\n    setAppointment({\n      ...appointment,\n      paymentBalance: newPaymentBalance,\n    });\n  }\n\n  if (props.listView) {\n    return (\n      <AppointmentListView\n        isLoading={isLoading}\n        session={props.session}\n        appointment={appointment}\n        handleStatus={handleStatus}\n        handleDelete={handleDelete}\n      />\n    );\n  } else {\n    return (\n      <AppointmentDetailView\n        isLoading={isLoading}\n        session={props.session}\n        appointment={appointment}\n        handleStatus={handleStatus}\n        handleDelete={handleDelete}\n        updatePayment={updatePaymentBalance}\n      />\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}