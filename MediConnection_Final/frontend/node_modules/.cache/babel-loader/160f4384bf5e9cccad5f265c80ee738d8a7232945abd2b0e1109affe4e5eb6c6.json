{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loadSession } from \"../sessionStorage\";\nconst presistedSession = loadSession();\nconst initialState = presistedSession !== undefined ? presistedSession : {\n  authToken: \"\",\n  username: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  isPhysician: false\n};\nexport const sessionSlice = createSlice({\n  name: 'session',\n  initialState,\n  reducers: {\n    set: (state, action) => {\n      let isPhysician = state.isPhysician;\n      if (action.payload.isPhysician !== undefined) {\n        isPhysician = action.payload.isPhysician;\n      }\n      return {\n        ...state,\n        ...action.payload,\n        isPhysician: Boolean(JSON.parse(isPhysician)) ? true : false\n      };\n    },\n    reset: state => {\n      state.authToken = \"\";\n      state.username = \"\";\n      state.firstName = \"\";\n      state.lastName = \"\";\n      state.isPhysician = false;\n      state.profilePhotoId = null;\n    }\n  }\n});\nexport const {\n  set,\n  reset\n} = sessionSlice.actions;\nexport default sessionSlice.reducer;","map":{"version":3,"names":["createSlice","loadSession","presistedSession","initialState","undefined","authToken","username","firstName","lastName","isPhysician","sessionSlice","name","reducers","set","state","action","payload","Boolean","JSON","parse","reset","profilePhotoId","actions","reducer"],"sources":["/Users/ray/Desktop/MediConnection_Final/frontend/src/store/slices/sessionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { loadSession } from \"../sessionStorage\";\n\n\nconst presistedSession = loadSession();\nconst initialState = (presistedSession !== undefined) ? presistedSession: {\n    authToken: \"\",\n    username: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    isPhysician: false,\n}\n\n\nexport const sessionSlice = createSlice({\n    name: 'session',\n    initialState,\n    reducers: {\n        set: (state, action) => {\n            let isPhysician = state.isPhysician;\n            if (action.payload.isPhysician !== undefined) {\n                isPhysician = action.payload.isPhysician;\n            }\n\n            return {\n                ...state,\n                ...action.payload,\n                isPhysician: Boolean(JSON.parse(isPhysician)) ? true: false\n            }\n        },\n        reset: (state) => {\n            state.authToken = \"\";\n            state.username = \"\";\n            state.firstName = \"\";\n            state.lastName = \"\";\n            state.isPhysician = false;\n            state.profilePhotoId = null;\n        }\n    }\n});\n\n\nexport const { set, reset } = sessionSlice.actions;\nexport default sessionSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,mBAAmB;AAG/C,MAAMC,gBAAgB,GAAGD,WAAW,CAAC,CAAC;AACtC,MAAME,YAAY,GAAID,gBAAgB,KAAKE,SAAS,GAAIF,gBAAgB,GAAE;EACtEG,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE;AACjB,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAGV,WAAW,CAAC;EACpCW,IAAI,EAAE,SAAS;EACfR,YAAY;EACZS,QAAQ,EAAE;IACNC,GAAG,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpB,IAAIN,WAAW,GAAGK,KAAK,CAACL,WAAW;MACnC,IAAIM,MAAM,CAACC,OAAO,CAACP,WAAW,KAAKL,SAAS,EAAE;QAC1CK,WAAW,GAAGM,MAAM,CAACC,OAAO,CAACP,WAAW;MAC5C;MAEA,OAAO;QACH,GAAGK,KAAK;QACR,GAAGC,MAAM,CAACC,OAAO;QACjBP,WAAW,EAAEQ,OAAO,CAACC,IAAI,CAACC,KAAK,CAACV,WAAW,CAAC,CAAC,GAAG,IAAI,GAAE;MAC1D,CAAC;IACL,CAAC;IACDW,KAAK,EAAGN,KAAK,IAAK;MACdA,KAAK,CAACT,SAAS,GAAG,EAAE;MACpBS,KAAK,CAACR,QAAQ,GAAG,EAAE;MACnBQ,KAAK,CAACP,SAAS,GAAG,EAAE;MACpBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACL,WAAW,GAAG,KAAK;MACzBK,KAAK,CAACO,cAAc,GAAG,IAAI;IAC/B;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAER,GAAG;EAAEO;AAAM,CAAC,GAAGV,YAAY,CAACY,OAAO;AAClD,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}