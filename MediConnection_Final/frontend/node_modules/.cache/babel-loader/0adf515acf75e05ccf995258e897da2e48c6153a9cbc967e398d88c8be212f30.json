{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/messageWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Col, FluidContainer, Row } from \"../../../../components/layout\";\nimport { FullTime, PrettyDate } from \"../../../../components/dates\";\nimport { AutoLoader } from \"../../../../components/loaders\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageWindow(props) {\n  _s();\n  const bottomRef = useRef(null);\n  const [state, setState] = useState({\n    messages: [],\n    limit: 10\n  });\n  // console.log(\"Message window\", props);\n  useEffect(() => {\n    const currentBottomRef = bottomRef.current;\n    async function appendMessage(message) {\n      try {\n        setState(prevState => {\n          const updatedMessages = [...prevState.messages, message];\n          return {\n            ...prevState,\n            messages: updatedMessages\n          };\n        });\n        currentBottomRef.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\"\n        });\n      } catch (err) {\n        console.error(`Failed to receive chat message from server. ${err}`);\n      }\n    }\n    if (props.channel) {\n      props.channel.on(\"chat\", appendMessage);\n    }\n  }, [props.channel]);\n  async function appendMessages() {\n    // console.log(\"I was clicked\");\n    try {\n      if (props.chat) {\n        const url = `http://localhost:4090/api/chats/${props.chat._id}/messages`;\n        const searchParams = new URLSearchParams();\n        searchParams.append(\"page\", Math.ceil(state.messages.length / state.limit));\n        searchParams.append(\"limit\", state.limit);\n        const messagesResponse = await axios.get(`${url}?${searchParams.toString()}`, {\n          headers: {\n            Authorization: `Bearer ${props.session.authToken}`\n          }\n        });\n        console.log(\"Charley\", messagesResponse);\n        let data = messagesResponse.data;\n        if (messagesResponse.status !== 200) {\n          throw new Error(data.message);\n        }\n        const newMessages = data.reverse();\n        setState(prevState => {\n          const updatedMessages = [...newMessages, ...prevState.messages];\n          return {\n            ...prevState,\n            messages: updatedMessages\n          };\n        });\n      }\n    } catch (err) {\n      console.error(`Failed to append chat messages. ${err}`);\n    }\n  }\n\n  // Now render message window.\n  let lastTimestamp = null;\n  let lastUsername = \"\";\n  const messageItems = [];\n  for (const [idx, message] of state.messages.entries()) {\n    let newMessages = message;\n    if (newMessages.info) {\n      newMessages = newMessages.info;\n    } else {\n      console.log(\"No info. Most likely new\");\n    }\n    let timestamp = new Date(newMessages.timestamp);\n    if (!lastTimestamp || lastTimestamp.toDateString() !== timestamp.toDateString()) {\n      let dateItem = /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-auto md-chat-sys\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"md-font-sm my-0 text-muted\",\n            children: /*#__PURE__*/_jsxDEV(PrettyDate, {\n              date: timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, `date-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n      messageItems.push(dateItem);\n      lastTimestamp = timestamp;\n      lastUsername = \"\";\n    }\n    let currentUsername = newMessages.sender;\n    let isCurrentUser = props.session.username === currentUsername ? true : false;\n    let chatAlign = isCurrentUser ? \"justify-content-end\" : \"justify-content-start\";\n    let chatColor = isCurrentUser ? \"md-chat-out\" : \"md-chat-in\";\n    let chatSpacing = lastUsername === currentUsername ? \"mt-1\" : \"mt-3\";\n    let messageItem = /*#__PURE__*/_jsxDEV(Row, {\n      className: `${chatAlign} ${chatSpacing}`,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-10\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: chatAlign,\n          children: /*#__PURE__*/_jsxDEV(FluidContainer, {\n            className: `md-chat-msg ${chatColor} mx-2 p-2`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"my-0\",\n              children: newMessages.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"my-0 md-font-xs text-muted\",\n                children: /*#__PURE__*/_jsxDEV(FullTime, {\n                  date: timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n    messageItems.push(messageItem);\n    lastUsername = currentUsername;\n  }\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"md-msg-window flex-grow-1 overflow-y border-top border-bottom\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(AutoLoader, {\n        callback: appendMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), messageItems, /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: bottomRef,\n        className: \"p-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageWindow, \"R/YPz3OzLAtiz4vH9Nic+mtepok=\");\n_c = MessageWindow;\nvar _c;\n$RefreshReg$(_c, \"MessageWindow\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Col","FluidContainer","Row","FullTime","PrettyDate","AutoLoader","axios","jsxDEV","_jsxDEV","MessageWindow","props","_s","bottomRef","state","setState","messages","limit","currentBottomRef","current","appendMessage","message","prevState","updatedMessages","scrollIntoView","behavior","block","inline","err","console","error","channel","on","appendMessages","chat","url","_id","searchParams","URLSearchParams","append","Math","ceil","length","messagesResponse","get","toString","headers","Authorization","session","authToken","log","data","status","Error","newMessages","reverse","lastTimestamp","lastUsername","messageItems","idx","entries","info","timestamp","Date","toDateString","dateItem","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","push","currentUsername","sender","isCurrentUser","username","chatAlign","chatColor","chatSpacing","messageItem","content","callback","ref","_c","$RefreshReg$"],"sources":["/Users/ray/Desktop/MediConnection_Final/frontend/src/containers/chats/chat/detailedView/messageWindow.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Col, FluidContainer, Row } from \"../../../../components/layout\";\nimport { FullTime, PrettyDate } from \"../../../../components/dates\";\nimport { AutoLoader } from \"../../../../components/loaders\";\nimport axios from \"axios\";\n\nexport default function MessageWindow(props) {\n  const bottomRef = useRef(null);\n\n  const [state, setState] = useState({\n    messages: [],\n    limit: 10,\n  });\n  // console.log(\"Message window\", props);\n  useEffect(() => {\n    const currentBottomRef = bottomRef.current;\n\n    async function appendMessage(message) {\n      try {\n        setState((prevState) => {\n          const updatedMessages = [...prevState.messages, message];\n\n          return {\n            ...prevState,\n            messages: updatedMessages,\n          };\n        });\n\n        currentBottomRef.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\",\n        });\n      } catch (err) {\n        console.error(`Failed to receive chat message from server. ${err}`);\n      }\n    }\n\n    if (props.channel) {\n      props.channel.on(\"chat\", appendMessage);\n    }\n  }, [props.channel]);\n\n  async function appendMessages() {\n    // console.log(\"I was clicked\");\n    try {\n      if (props.chat) {\n        const url = `http://localhost:4090/api/chats/${props.chat._id}/messages`;\n\n        const searchParams = new URLSearchParams();\n        searchParams.append(\n          \"page\",\n          Math.ceil(state.messages.length / state.limit)\n        );\n        searchParams.append(\"limit\", state.limit);\n\n        const messagesResponse = await axios.get(\n          `${url}?${searchParams.toString()}`,\n          {\n            headers: {\n              Authorization: `Bearer ${props.session.authToken}`,\n            },\n          }\n        );\n        console.log(\"Charley\", messagesResponse);\n        let data = messagesResponse.data;\n        if (messagesResponse.status !== 200) {\n          throw new Error(data.message);\n        }\n\n        const newMessages = data.reverse();\n        setState((prevState) => {\n          const updatedMessages = [...newMessages, ...prevState.messages];\n\n          return {\n            ...prevState,\n            messages: updatedMessages,\n          };\n        });\n      }\n    } catch (err) {\n      console.error(`Failed to append chat messages. ${err}`);\n    }\n  }\n\n  // Now render message window.\n  let lastTimestamp = null;\n  let lastUsername = \"\";\n\n  const messageItems = [];\n  for (const [idx, message] of state.messages.entries()) {\n    let newMessages = message;\n\n    if (newMessages.info) {\n      newMessages = newMessages.info;\n    } else {\n      console.log(\"No info. Most likely new\");\n    }\n\n    let timestamp = new Date(newMessages.timestamp);\n\n    if (\n      !lastTimestamp ||\n      lastTimestamp.toDateString() !== timestamp.toDateString()\n    ) {\n      let dateItem = (\n        <Row key={`date-${idx}`} className='justify-content-center mt-3'>\n          <Col className='col-auto md-chat-sys'>\n            <p className='md-font-sm my-0 text-muted'>\n              <PrettyDate date={timestamp} />\n            </p>\n          </Col>\n        </Row>\n      );\n\n      messageItems.push(dateItem);\n      lastTimestamp = timestamp;\n      lastUsername = \"\";\n    }\n\n    let currentUsername = newMessages.sender;\n    let isCurrentUser =\n      props.session.username === currentUsername ? true : false;\n\n    let chatAlign = isCurrentUser\n      ? \"justify-content-end\"\n      : \"justify-content-start\";\n    let chatColor = isCurrentUser ? \"md-chat-out\" : \"md-chat-in\";\n    let chatSpacing = lastUsername === currentUsername ? \"mt-1\" : \"mt-3\";\n\n    let messageItem = (\n      <Row key={idx} className={`${chatAlign} ${chatSpacing}`}>\n        <Col className='col-10'>\n          <Row className={chatAlign}>\n            <FluidContainer className={`md-chat-msg ${chatColor} mx-2 p-2`}>\n              <p className='my-0'>{newMessages.content}</p>\n              <footer className='d-flex justify-content-end'>\n                <p className='my-0 md-font-xs text-muted'>\n                  <FullTime date={timestamp} />\n                </p>\n              </footer>\n            </FluidContainer>\n          </Row>\n        </Col>\n      </Row>\n    );\n\n    messageItems.push(messageItem);\n    lastUsername = currentUsername;\n  }\n\n  return (\n    <Row className='md-msg-window flex-grow-1 overflow-y border-top border-bottom'>\n      <Col>\n        <AutoLoader callback={appendMessages} />\n        {messageItems}\n        <span ref={bottomRef} className='p-1'></span>\n      </Col>\n    </Row>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}