{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/Medico/frontend/src/containers/users/user/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UserListView from \"./views/listView\";\nimport UserDetailView from \"./views/detailView\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function User(props) {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  // Initialize user by fetching information from server.\n  useEffect(() => {\n    const {\n      username\n    } = props;\n    async function initialize() {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`http://10.225.80.219:4090/api/users/${username}`, {\n          headers: {\n            Authorization: `Bearer ${props.session.authToken}`\n          }\n        });\n        // console.log(\"Res back\", response);\n        let data = response.data;\n        if (response.status !== 200) {\n          throw new Error(data.message);\n        }\n        setUser(data);\n      } catch (err) {\n        console.error(`Failed to get user information- ${props.username}. ${err}`);\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1000);\n      }\n    }\n    initialize();\n  }, [props.username, props.session.authToken]);\n\n  // Now render view.\n  if (props.listView) {\n    return /*#__PURE__*/_jsxDEV(UserListView, {\n      isLoading: isLoading,\n      session: props.session,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(UserDetailView, {\n      isLoading: isLoading,\n      session: props.session,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(User, \"XgmaejmscVpCPaCEudRqHDq1T2E=\");\n_c = User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","UserListView","UserDetailView","axios","jsxDEV","_jsxDEV","User","props","_s","isLoading","setIsLoading","user","setUser","username","initialize","response","get","headers","Authorization","session","authToken","data","status","Error","message","err","console","error","setTimeout","listView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ray/Desktop/Medico/frontend/src/containers/users/user/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport UserListView from \"./views/listView\";\nimport UserDetailView from \"./views/detailView\";\nimport axios from \"axios\";\n\nexport default function User(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  // Initialize user by fetching information from server.\n  useEffect(() => {\n    const { username } = props;\n    async function initialize() {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(\n          `http://10.225.80.219:4090/api/users/${username}`,\n          {\n            headers: {\n              Authorization: `Bearer ${props.session.authToken}`,\n            },\n          }\n        );\n        // console.log(\"Res back\", response);\n        let data = response.data;\n        if (response.status !== 200) {\n          throw new Error(data.message);\n        }\n\n        setUser(data);\n      } catch (err) {\n        console.error(\n          `Failed to get user information- ${props.username}. ${err}`\n        );\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 1000);\n      }\n    }\n\n    initialize();\n  }, [props.username, props.session.authToken]);\n\n  // Now render view.\n  if (props.listView) {\n    return (\n      <UserListView isLoading={isLoading} session={props.session} user={user} />\n    );\n  } else {\n    return (\n      <UserDetailView\n        isLoading={isLoading}\n        session={props.session}\n        user={user}\n      />\n    );\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACd,MAAM;MAAEc;IAAS,CAAC,GAAGN,KAAK;IAC1B,eAAeO,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACFJ,YAAY,CAAC,IAAI,CAAC;QAClB,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,uCAAsCH,QAAS,EAAC,EACjD;UACEI,OAAO,EAAE;YACPC,aAAa,EAAG,UAASX,KAAK,CAACY,OAAO,CAACC,SAAU;UACnD;QACF,CACF,CAAC;QACD;QACA,IAAIC,IAAI,GAAGN,QAAQ,CAACM,IAAI;QACxB,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC;QAC/B;QAEAZ,OAAO,CAACS,IAAI,CAAC;MACf,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CACV,mCAAkCpB,KAAK,CAACM,QAAS,KAAIY,GAAI,EAC5D,CAAC;MACH,CAAC,SAAS;QACRG,UAAU,CAAC,MAAM;UACflB,YAAY,CAAC,KAAK,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;IAEAI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACP,KAAK,CAACM,QAAQ,EAAEN,KAAK,CAACY,OAAO,CAACC,SAAS,CAAC,CAAC;;EAE7C;EACA,IAAIb,KAAK,CAACsB,QAAQ,EAAE;IAClB,oBACExB,OAAA,CAACJ,YAAY;MAACQ,SAAS,EAAEA,SAAU;MAACU,OAAO,EAAEZ,KAAK,CAACY,OAAQ;MAACR,IAAI,EAAEA;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAE9E,CAAC,MAAM;IACL,oBACE5B,OAAA,CAACH,cAAc;MACbO,SAAS,EAAEA,SAAU;MACrBU,OAAO,EAAEZ,KAAK,CAACY,OAAQ;MACvBR,IAAI,EAAEA;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAEN;AACF;AAACzB,EAAA,CArDuBF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}