{"ast":null,"code":"var _jsxFileName = \"/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/appointments/appointment/views/detailView/medications/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useCompareUsers } from '../../../../../../components/hooks';\nimport { AutoLoader } from '../../../../../../components/loaders';\nimport { TitleBar, TitleToggler, Widget, WidgetCollapsible } from '../../../../../../components/widgets';\nimport AddSection from './addSection';\nimport ListSection from './listSection';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MedicationSection(props) {\n  _s();\n  const [state, setState] = useState({\n    medications: [],\n    limit: 10\n  });\n  async function appendMedications() {\n    try {\n      const url = `http://localhost:4090/api/appointments/${props.appointment._id}/medications`;\n      console.log(props.appointment._id);\n      const searchParams = new URLSearchParams();\n      searchParams.append('page', Math.ceil(state.medications.length / state.limit));\n      searchParams.append('limit', state.limit);\n      const response = await axios.get(`${url}?${searchParams.toString()}`, {\n        headers: {\n          'Authorization': `Bearer ${props.session.authToken}`\n        }\n      });\n      console.log(response);\n      let newMedications = response.data;\n      if (response.status !== 200) {\n        throw new Error(newMedications.message);\n      }\n      setState(prevState => {\n        const updatedMedications = [...prevState.medications, ...newMedications];\n        return {\n          ...prevState,\n          medications: updatedMedications\n        };\n      });\n    } catch (err) {\n      console.error(`Failed to append more medications. ${err}`);\n    }\n  }\n  async function appendMedication(newMedication) {\n    setState(prevState => {\n      const newMedications = [newMedication, ...prevState.medications];\n      return {\n        ...prevState,\n        medications: newMedications\n      };\n    });\n  }\n  async function deleteMedication(id) {\n    try {\n      const response = await axios.delete(`http://localhost:4090/api/appointments/${props.appointment._id}/medications/${id}`, {\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${props.session.authToken}`\n        }\n      });\n      let data = response.data;\n      if (response.status !== 200) {\n        throw new Error(data.message);\n      }\n      setState(prevState => {\n        const newMedications = state.medications.filter(medication => {\n          return medication.id !== id;\n        });\n        return {\n          ...prevState,\n          medications: newMedications\n        };\n      });\n    } catch (err) {\n      console.error(`Failed to delete medication- ${id}. ${err}`);\n    }\n  }\n\n  // Now render view\n  const isCurrentUserPhysician = useCompareUsers(props.session, props.appointment.physician);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Widget, {\n      children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n        title: \"Medications\",\n        children: isCurrentUserPhysician && /*#__PURE__*/_jsxDEV(TitleToggler, {\n          target: \"apptMedicationAdd01\",\n          expandIcon: \"add\",\n          collapseIcon: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WidgetCollapsible, {\n        id: \"apptMedicationAdd01\",\n        children: /*#__PURE__*/_jsxDEV(AddSection, {\n          session: props.session,\n          appointment: props.appointment,\n          appendMedication: appendMedication\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListSection, {\n        session: props.session,\n        medications: state.medications,\n        deleteMedication: deleteMedication\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AutoLoader, {\n      callback: appendMedications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MedicationSection, \"3lYTCWvBRQanvPmNQZ4aikJOdOs=\", false, function () {\n  return [useCompareUsers];\n});\n_c = MedicationSection;\nvar _c;\n$RefreshReg$(_c, \"MedicationSection\");","map":{"version":3,"names":["React","useState","useCompareUsers","AutoLoader","TitleBar","TitleToggler","Widget","WidgetCollapsible","AddSection","ListSection","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MedicationSection","props","_s","state","setState","medications","limit","appendMedications","url","appointment","_id","console","log","searchParams","URLSearchParams","append","Math","ceil","length","response","get","toString","headers","session","authToken","newMedications","data","status","Error","message","prevState","updatedMedications","err","error","appendMedication","newMedication","deleteMedication","id","delete","credentials","filter","medication","isCurrentUserPhysician","physician","children","title","target","expandIcon","collapseIcon","fileName","_jsxFileName","lineNumber","columnNumber","callback","_c","$RefreshReg$"],"sources":["/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/appointments/appointment/views/detailView/medications/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useCompareUsers } from '../../../../../../components/hooks';\nimport { AutoLoader } from '../../../../../../components/loaders';\nimport { TitleBar, TitleToggler, Widget, \n    WidgetCollapsible } from '../../../../../../components/widgets';\n\nimport AddSection from './addSection';\nimport ListSection from './listSection';\nimport axios from 'axios';\n\n\nexport default function MedicationSection(props) {\n    const [state, setState] = useState({\n        medications: [],\n        limit: 10\n    });\n\n    async function appendMedications() {\n        try {\n            const url = `http://localhost:4090/api/appointments/${props.appointment._id}/medications`;\n            console.log(props.appointment._id);\n\n            const searchParams = new URLSearchParams();\n            searchParams.append('page', Math.ceil(state.medications.length / state.limit));\n            searchParams.append('limit', state.limit);\n\n            const response = await axios.get(`${url}?${searchParams.toString()}`, {\n                headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            console.log(response);\n            let newMedications =  response.data;\n            if (response.status !== 200) {\n                throw new Error(newMedications.message);\n            }\n\n            setState(prevState => {\n                const updatedMedications = [...prevState.medications, ...newMedications];\n\n                return {\n                    ...prevState,\n                    medications: updatedMedications\n                }\n            });\n        } catch (err) {\n            console.error(`Failed to append more medications. ${err}`);\n        }\n    }\n\n    async function appendMedication(newMedication) {\n        setState(prevState => {\n            const newMedications = [newMedication, ...prevState.medications];\n\n            return {\n                ...prevState,\n                medications: newMedications\n            }\n        });\n    }\n\n    async function deleteMedication(id) {\n        try {\n            const response = await axios.delete(`http://localhost:4090/api/appointments/${props.appointment._id}/medications/${id}`, {\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let data =  response.data;\n            if (response.status !== 200) {\n                throw new Error(data.message);\n            }\n\n            setState(prevState => {\n                const newMedications = state.medications.filter(medication => {\n                    return medication.id !== id;\n                });\n\n                return {\n                    ...prevState,\n                    medications: newMedications\n                }\n            });\n        } catch (err) {\n            console.error(`Failed to delete medication- ${id}. ${err}`);\n        }\n    }\n\n    // Now render view\n    const isCurrentUserPhysician = useCompareUsers(props.session, props.appointment.physician);\n\n    return (\n        <>\n            <Widget>\n                <TitleBar title=\"Medications\">\n                    {isCurrentUserPhysician &&\n                        <TitleToggler \n                            target=\"apptMedicationAdd01\"\n                            expandIcon=\"add\"\n                            collapseIcon=\"clear\"\n                        />\n                    }\n                </TitleBar>\n                <WidgetCollapsible id=\"apptMedicationAdd01\">\n                    <AddSection \n                        session={props.session}\n                        appointment={props.appointment}\n                        appendMedication={appendMedication}\n                    />\n                </WidgetCollapsible>\n                <ListSection\n                    session={props.session}\n                    medications={state.medications}\n                    deleteMedication={deleteMedication}\n                />\n            </Widget>\n            <AutoLoader callback={appendMedications} />\n        </>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,EACnCC,iBAAiB,QAAQ,sCAAsC;AAEnE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,eAAe,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC;IAC/BmB,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,eAAeC,iBAAiBA,CAAA,EAAG;IAC/B,IAAI;MACA,MAAMC,GAAG,GAAI,0CAAyCP,KAAK,CAACQ,WAAW,CAACC,GAAI,cAAa;MACzFC,OAAO,CAACC,GAAG,CAACX,KAAK,CAACQ,WAAW,CAACC,GAAG,CAAC;MAElC,MAAMG,YAAY,GAAG,IAAIC,eAAe,CAAC,CAAC;MAC1CD,YAAY,CAACE,MAAM,CAAC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAACd,KAAK,CAACE,WAAW,CAACa,MAAM,GAAGf,KAAK,CAACG,KAAK,CAAC,CAAC;MAC9EO,YAAY,CAACE,MAAM,CAAC,OAAO,EAAEZ,KAAK,CAACG,KAAK,CAAC;MAEzC,MAAMa,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,GAAEZ,GAAI,IAAGK,YAAY,CAACQ,QAAQ,CAAC,CAAE,EAAC,EAAE;QAClEC,OAAO,EAAE;UACL,eAAe,EAAG,UAASrB,KAAK,CAACsB,OAAO,CAACC,SAAU;QACvD;MACJ,CAAC,CAAC;MAEFb,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;MACrB,IAAIM,cAAc,GAAIN,QAAQ,CAACO,IAAI;MACnC,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QACzB,MAAM,IAAIC,KAAK,CAACH,cAAc,CAACI,OAAO,CAAC;MAC3C;MAEAzB,QAAQ,CAAC0B,SAAS,IAAI;QAClB,MAAMC,kBAAkB,GAAG,CAAC,GAAGD,SAAS,CAACzB,WAAW,EAAE,GAAGoB,cAAc,CAAC;QAExE,OAAO;UACH,GAAGK,SAAS;UACZzB,WAAW,EAAE0B;QACjB,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVrB,OAAO,CAACsB,KAAK,CAAE,sCAAqCD,GAAI,EAAC,CAAC;IAC9D;EACJ;EAEA,eAAeE,gBAAgBA,CAACC,aAAa,EAAE;IAC3C/B,QAAQ,CAAC0B,SAAS,IAAI;MAClB,MAAML,cAAc,GAAG,CAACU,aAAa,EAAE,GAAGL,SAAS,CAACzB,WAAW,CAAC;MAEhE,OAAO;QACH,GAAGyB,SAAS;QACZzB,WAAW,EAAEoB;MACjB,CAAC;IACL,CAAC,CAAC;EACN;EAEA,eAAeW,gBAAgBA,CAACC,EAAE,EAAE;IAChC,IAAI;MACA,MAAMlB,QAAQ,GAAG,MAAMxB,KAAK,CAAC2C,MAAM,CAAE,0CAAyCrC,KAAK,CAACQ,WAAW,CAACC,GAAI,gBAAe2B,EAAG,EAAC,EAAE;QACrHE,WAAW,EAAE,aAAa;QAC1BjB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASrB,KAAK,CAACsB,OAAO,CAACC,SAAU;QACrD;MACJ,CAAC,CAAC;MAEF,IAAIE,IAAI,GAAIP,QAAQ,CAACO,IAAI;MACzB,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QACzB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC;MACjC;MAEAzB,QAAQ,CAAC0B,SAAS,IAAI;QAClB,MAAML,cAAc,GAAGtB,KAAK,CAACE,WAAW,CAACmC,MAAM,CAACC,UAAU,IAAI;UAC1D,OAAOA,UAAU,CAACJ,EAAE,KAAKA,EAAE;QAC/B,CAAC,CAAC;QAEF,OAAO;UACH,GAAGP,SAAS;UACZzB,WAAW,EAAEoB;QACjB,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVrB,OAAO,CAACsB,KAAK,CAAE,gCAA+BI,EAAG,KAAIL,GAAI,EAAC,CAAC;IAC/D;EACJ;;EAEA;EACA,MAAMU,sBAAsB,GAAGvD,eAAe,CAACc,KAAK,CAACsB,OAAO,EAAEtB,KAAK,CAACQ,WAAW,CAACkC,SAAS,CAAC;EAE1F,oBACI9C,OAAA,CAAAE,SAAA;IAAA6C,QAAA,gBACI/C,OAAA,CAACN,MAAM;MAAAqD,QAAA,gBACH/C,OAAA,CAACR,QAAQ;QAACwD,KAAK,EAAC,aAAa;QAAAD,QAAA,EACxBF,sBAAsB,iBACnB7C,OAAA,CAACP,YAAY;UACTwD,MAAM,EAAC,qBAAqB;UAC5BC,UAAU,EAAC,KAAK;UAChBC,YAAY,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,eACXvD,OAAA,CAACL,iBAAiB;QAAC6C,EAAE,EAAC,qBAAqB;QAAAO,QAAA,eACvC/C,OAAA,CAACJ,UAAU;UACP8B,OAAO,EAAEtB,KAAK,CAACsB,OAAQ;UACvBd,WAAW,EAAER,KAAK,CAACQ,WAAY;UAC/ByB,gBAAgB,EAAEA;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACa,CAAC,eACpBvD,OAAA,CAACH,WAAW;QACR6B,OAAO,EAAEtB,KAAK,CAACsB,OAAQ;QACvBlB,WAAW,EAAEF,KAAK,CAACE,WAAY;QAC/B+B,gBAAgB,EAAEA;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTvD,OAAA,CAACT,UAAU;MAACiE,QAAQ,EAAE9C;IAAkB;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7C,CAAC;AAEX;AAAClD,EAAA,CAhHuBF,iBAAiB;EAAA,QAkFNb,eAAe;AAAA;AAAAmE,EAAA,GAlF1BtD,iBAAiB;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}