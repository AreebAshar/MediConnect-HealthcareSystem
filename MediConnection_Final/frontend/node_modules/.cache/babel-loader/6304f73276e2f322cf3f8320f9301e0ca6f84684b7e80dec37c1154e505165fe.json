{"ast":null,"code":"var _jsxFileName = \"/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/appointments/appointment/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AppointmentListView from \"./views/listView\";\nimport AppointmentDetailView from \"./views/detailView\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Appointment(props) {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [appointment, setAppointment] = useState({});\n\n  // Initialize appointment by fetching appointment information.\n  useEffect(() => {\n    // console.log(\"here\");\n    async function initialize() {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`http://localhost:4090/api/appointments/${props.id}`, {\n          headers: {\n            'Authorization': `Bearer ${props.session.authToken}`\n          }\n        });\n        // console.log(response);\n        let data = await response.data;\n        if (response.status !== 200) {\n          throw new Error(data.message);\n        }\n        setAppointment(data);\n      } catch (err) {\n        console.error(`Failed to get appointment information- ${props.id}. ${err}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    initialize();\n  }, [props.id, props.session]);\n  async function handleStatus(e) {\n    e.preventDefault();\n    try {\n      const newStatus = e.currentTarget.value;\n      const body = {\n        status: newStatus\n      };\n      const response = await axios.put(`http://localhost:4090/api/appointments/${props.id}`, body, {\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${props.session.authToken}`\n        }\n      });\n      let data = await response.data;\n      if (response.status !== 200) {\n        throw new Error(data.message);\n      }\n      setAppointment(prevState => {\n        return {\n          ...prevState,\n          status: newStatus\n        };\n      });\n    } catch (err) {\n      console.error(`Failed to update status for appointment- ${props.id}. ${err}`);\n    }\n  }\n  async function handleDelete(e) {\n    e.preventDefault();\n    try {\n      const response = await axios.delete(`http://localhost:4090/api/appointments/${props.id}`, {\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${props.session.authToken}`\n        }\n      });\n      let data = await response.data;\n      if (response.status !== 200) {\n        throw new Error(data.message);\n      }\n      if (props.deleteAppointment) {\n        await props.deleteAppointment(props.id);\n      }\n    } catch (err) {\n      // console.log(`Failed to delete appointment- ${props.id}. ${err}`);\n    }\n  }\n  async function updatePaymentBalance(newPaymentBalance) {\n    setAppointment({\n      ...appointment,\n      paymentBalance: newPaymentBalance\n    });\n  }\n  if (props.listView) {\n    return /*#__PURE__*/_jsxDEV(AppointmentListView, {\n      isLoading: isLoading,\n      session: props.session,\n      appointment: appointment,\n      handleStatus: handleStatus,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(AppointmentDetailView, {\n      isLoading: isLoading,\n      session: props.session,\n      appointment: appointment,\n      handleStatus: handleStatus,\n      handleDelete: handleDelete,\n      updatePayment: updatePaymentBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Appointment, \"ndKtBuqy8A5yhjyi1LC2oixq79Q=\");\n_c = Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["React","useEffect","useState","AppointmentListView","AppointmentDetailView","axios","jsxDEV","_jsxDEV","Appointment","props","_s","isLoading","setIsLoading","appointment","setAppointment","initialize","response","get","id","headers","session","authToken","data","status","Error","message","err","console","error","handleStatus","e","preventDefault","newStatus","currentTarget","value","body","put","credentials","prevState","handleDelete","delete","deleteAppointment","updatePaymentBalance","newPaymentBalance","paymentBalance","listView","fileName","_jsxFileName","lineNumber","columnNumber","updatePayment","_c","$RefreshReg$"],"sources":["/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/appointments/appointment/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport AppointmentListView from \"./views/listView\";\nimport AppointmentDetailView from \"./views/detailView\";\nimport axios from 'axios';\n\n\nexport default function Appointment(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [appointment, setAppointment] = useState({});\n\n    // Initialize appointment by fetching appointment information.\n    useEffect(() => {\n        // console.log(\"here\");\n        async function initialize() {\n            try {\n                setIsLoading(true);\n                const response = await axios.get(`http://localhost:4090/api/appointments/${props.id}`, {\n                    headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                    }\n                });\n                // console.log(response);\n                let data = await response.data;\n                if (response.status !== 200) {\n                    throw new Error(data.message);\n                }\n                setAppointment(data);\n            } catch (err) {\n                console.error(`Failed to get appointment information- ${props.id}. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        initialize();\n    }, [props.id, props.session]);\n\n    async function handleStatus(e) {\n        e.preventDefault();\n        try {\n            const newStatus = e.currentTarget.value;\n            const body = {status: newStatus};\n\n            const response = await axios.put(`http://localhost:4090/api/appointments/${props.id}`, body, {\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let data = await response.data;\n            if (response.status !== 200) {\n                throw new Error(data.message);\n            }\n\n            setAppointment(prevState => {\n                return {\n                    ...prevState,\n                    status: newStatus\n                }\n            });\n        } catch (err) {\n            console.error(`Failed to update status for appointment- ${props.id}. ${err}`);\n        }\n    }\n\n    async function handleDelete(e) {\n        e.preventDefault();\n        try {\n            const response = await axios.delete(`http://localhost:4090/api/appointments/${props.id}`, {\n                credentials: 'same-origin',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n\n            let data = await response.data;\n            if (response.status !== 200) {\n                throw new Error(data.message);\n            }\n\n            if (props.deleteAppointment) {\n                await props.deleteAppointment(props.id);\n            }\n        } catch (err) {\n            // console.log(`Failed to delete appointment- ${props.id}. ${err}`);\n        }\n    }\n\n    async function updatePaymentBalance(newPaymentBalance) {\n        setAppointment({\n            ...appointment,\n            paymentBalance: newPaymentBalance\n        });\n    }\n\n    if (props.listView) {\n        return (\n            <AppointmentListView\n                isLoading={isLoading}\n                session={props.session}\n                appointment={appointment}\n                handleStatus={handleStatus}\n                handleDelete={handleDelete}\n            />\n        );\n    } else {\n        return (\n            <AppointmentDetailView \n                isLoading={isLoading}\n                session={props.session}\n                appointment={appointment}\n                handleStatus={handleStatus}\n                handleDelete={handleDelete}\n                updatePayment={updatePaymentBalance}\n            />\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}