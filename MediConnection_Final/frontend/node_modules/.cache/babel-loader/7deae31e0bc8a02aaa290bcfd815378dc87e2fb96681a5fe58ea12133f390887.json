{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loadSession } from \"../sessionStorage\";\nconst presistedSession = loadSession();\nconst initialState = presistedSession !== undefined ? presistedSession : {\n  authToken: \"\",\n  username: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  isPhysician: false,\n  profilePhotoId: null\n};\nexport const sessionSlice = createSlice({\n  name: 'session',\n  initialState,\n  reducers: {\n    set: (state, action) => {\n      let isPhysician = state.isPhysician;\n      if (action.payload.isPhysician !== undefined) {\n        isPhysician = action.payload.isPhysician;\n      }\n      return {\n        ...state,\n        ...action.payload,\n        isPhysician: Boolean(JSON.parse(isPhysician)) ? true : false\n      };\n    },\n    reset: state => {\n      state.authToken = \"\";\n      state.username = \"\";\n      state.firstName = \"\";\n      state.lastName = \"\";\n      state.isPhysician = false;\n      state.profilePhotoId = null;\n    }\n  }\n});\nexport const {\n  set,\n  reset\n} = sessionSlice.actions;\nexport default sessionSlice.reducer;","map":{"version":3,"names":["createSlice","loadSession","presistedSession","initialState","undefined","authToken","username","firstName","lastName","isPhysician","profilePhotoId","sessionSlice","name","reducers","set","state","action","payload","Boolean","JSON","parse","reset","actions","reducer"],"sources":["/Users/desmondoforiatta/Desktop/Medico/frontend/src/store/slices/sessionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { loadSession } from \"../sessionStorage\";\n\n\nconst presistedSession = loadSession();\nconst initialState = (presistedSession !== undefined) ? presistedSession: {\n    authToken: \"\",\n    username: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    isPhysician: false,\n    profilePhotoId: null\n}\n\n\nexport const sessionSlice = createSlice({\n    name: 'session',\n    initialState,\n    reducers: {\n        set: (state, action) => {\n            let isPhysician = state.isPhysician;\n            if (action.payload.isPhysician !== undefined) {\n                isPhysician = action.payload.isPhysician;\n            }\n\n            return {\n                ...state,\n                ...action.payload,\n                isPhysician: Boolean(JSON.parse(isPhysician)) ? true: false\n            }\n        },\n        reset: (state) => {\n            state.authToken = \"\";\n            state.username = \"\";\n            state.firstName = \"\";\n            state.lastName = \"\";\n            state.isPhysician = false;\n            state.profilePhotoId = null;\n        }\n    }\n});\n\n\nexport const { set, reset } = sessionSlice.actions;\nexport default sessionSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,mBAAmB;AAG/C,MAAMC,gBAAgB,GAAGD,WAAW,CAAC,CAAC;AACtC,MAAME,YAAY,GAAID,gBAAgB,KAAKE,SAAS,GAAIF,gBAAgB,GAAE;EACtEG,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,KAAK;EAClBC,cAAc,EAAE;AACpB,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAGX,WAAW,CAAC;EACpCY,IAAI,EAAE,SAAS;EACfT,YAAY;EACZU,QAAQ,EAAE;IACNC,GAAG,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpB,IAAIP,WAAW,GAAGM,KAAK,CAACN,WAAW;MACnC,IAAIO,MAAM,CAACC,OAAO,CAACR,WAAW,KAAKL,SAAS,EAAE;QAC1CK,WAAW,GAAGO,MAAM,CAACC,OAAO,CAACR,WAAW;MAC5C;MAEA,OAAO;QACH,GAAGM,KAAK;QACR,GAAGC,MAAM,CAACC,OAAO;QACjBR,WAAW,EAAES,OAAO,CAACC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC,CAAC,GAAG,IAAI,GAAE;MAC1D,CAAC;IACL,CAAC;IACDY,KAAK,EAAGN,KAAK,IAAK;MACdA,KAAK,CAACV,SAAS,GAAG,EAAE;MACpBU,KAAK,CAACT,QAAQ,GAAG,EAAE;MACnBS,KAAK,CAACR,SAAS,GAAG,EAAE;MACpBQ,KAAK,CAACP,QAAQ,GAAG,EAAE;MACnBO,KAAK,CAACN,WAAW,GAAG,KAAK;MACzBM,KAAK,CAACL,cAAc,GAAG,IAAI;IAC/B;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEI,GAAG;EAAEO;AAAM,CAAC,GAAGV,YAAY,CAACW,OAAO;AAClD,eAAeX,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}