{"ast":null,"code":"var _jsxFileName = \"/Users/ray/Desktop/Medico/frontend/src/components/loaders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Col, FluidContainer, Row } from './layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Loader = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"md-loader p-1\",\n    children: props.isLoading && /*#__PURE__*/_jsxDEV(FluidContainer, {\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-auto align-self-center\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"ellipsis01\",\n              className: \"md-ellipsis mx-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"ellipsis02\",\n              className: \"md-ellipsis mx-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"ellipsis03\",\n              className: \"md-ellipsis mx-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Loader;\nexport function AutoLoader(_ref) {\n  _s();\n  let {\n    callback = null\n  } = _ref;\n  const loaderRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  useEffect(() => {\n    const currentLoaderRef = loaderRef.current;\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: [0, 1]\n    };\n    async function handleObserver(entries, observer) {\n      if (!isLoading) {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            if (entry.intersectionRatio >= 0.90 && !hasLoaded) {\n              setIsLoading(true);\n              if (callback) {\n                callback();\n              }\n              setIsLoading(false);\n              setHasLoaded(true);\n            }\n          } else {\n            setHasLoaded(false);\n          }\n        });\n      }\n    }\n    const observer = new IntersectionObserver(handleObserver, options);\n    observer.observe(currentLoaderRef);\n    return function disconnectObserver() {\n      if (observer) {\n        observer.disconnect();\n      }\n    };\n  }, [callback, hasLoaded]);\n  return /*#__PURE__*/_jsxDEV(Loader, {\n    ref: loaderRef,\n    isLoading: isLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(AutoLoader, \"LR5SMO+kqiaMGaoOPMH37BhnZaI=\");\n_c3 = AutoLoader;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Loader$React.forwardRef\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"AutoLoader\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Col","FluidContainer","Row","jsxDEV","_jsxDEV","Loader","forwardRef","_c","props","ref","className","children","isLoading","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","AutoLoader","_ref","_s","callback","loaderRef","setIsLoading","hasLoaded","setHasLoaded","currentLoaderRef","current","options","root","rootMargin","threshold","handleObserver","entries","observer","forEach","entry","isIntersecting","intersectionRatio","IntersectionObserver","observe","disconnectObserver","disconnect","_c3","$RefreshReg$"],"sources":["/Users/ray/Desktop/Medico/frontend/src/components/loaders.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Col, FluidContainer, Row } from './layout';\n\n\nexport const Loader = React.forwardRef((props, ref) => {\n    return (\n        <div ref={ref} className=\"md-loader p-1\">\n            {props.isLoading &&\n                <FluidContainer className=\"p-3\">\n                    <Row className=\"justify-content-center\">\n                        <Col className=\"col-auto align-self-center\">\n                            <Row>\n                                <div id=\"ellipsis01\" className=\"md-ellipsis mx-1\"></div>\n                                <div id=\"ellipsis02\" className=\"md-ellipsis mx-1\"></div>\n                                <div id=\"ellipsis03\" className=\"md-ellipsis mx-1\"></div>\n                            </Row>\n                        </Col>\n                    </Row>\n                </FluidContainer>\n            }\n        </div>\n    );\n})\n\n\nexport function AutoLoader({ callback=null }) {\n    const loaderRef = useRef(null);\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasLoaded, setHasLoaded] = useState(false);\n\n    useEffect(() => {\n        const currentLoaderRef = loaderRef.current;\n        const options = {\n            root: null,\n            rootMargin: \"0px\",\n            threshold: [0, 1]\n        };\n\n        async function handleObserver(entries, observer) {\n            if (!isLoading) {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        if (entry.intersectionRatio >= 0.90 && !hasLoaded) {\n                            setIsLoading(true);\n\n                            if (callback) {\n                                callback();\n                            }\n                            \n                            setIsLoading(false);\n                            setHasLoaded(true);\n                        }\n                    } else {\n                        setHasLoaded(false);\n                    }\n                });\n            }\n        }\n\n        const observer = new IntersectionObserver(handleObserver, options);\n        observer.observe(currentLoaderRef);\n\n        return function disconnectObserver() {\n            if (observer) {\n                observer.disconnect();\n            }\n        }\n    }, [callback, hasLoaded]);\n\n    return (\n        <Loader ref={loaderRef} isLoading={isLoading} />\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}