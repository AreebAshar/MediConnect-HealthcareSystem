{"ast":null,"code":"var _jsxFileName = \"/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/chats/chat/detailedView/messageWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Col, FluidContainer, Row } from '../../../../components/layout';\nimport { FullTime, PrettyDate } from '../../../../components/dates';\nimport { AutoLoader } from '../../../../components/loaders';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageWindow(props) {\n  _s();\n  const bottomRef = useRef(null);\n  const [state, setState] = useState({\n    messages: [],\n    limit: 10\n  });\n  // console.log(\"Message window\", props);\n  useEffect(() => {\n    const currentBottomRef = bottomRef.current;\n    async function appendMessage(message) {\n      try {\n        setState(prevState => {\n          const updatedMessages = [...prevState.messages, message];\n          return {\n            ...prevState,\n            messages: updatedMessages\n          };\n        });\n        currentBottomRef.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\"\n        });\n      } catch (err) {\n        console.error(`Failed to receive chat message from server. ${err}`);\n      }\n    }\n    if (props.channel) {\n      props.channel.on('chat', appendMessage);\n    }\n  }, [props.channel]);\n  async function appendMessages() {\n    // console.log(\"I was clicked\");\n    try {\n      if (props.chat) {\n        const url = `http://localhost:4090/api/chats/${props.chat._id}/messages`;\n        const searchParams = new URLSearchParams();\n        searchParams.append('page', Math.ceil(state.messages.length / state.limit));\n        searchParams.append('limit', state.limit);\n        const messagesResponse = await axios.get(`${url}?${searchParams.toString()}`, {\n          headers: {\n            'Authorization': `Bearer ${props.session.authToken}`\n          }\n        });\n        console.log(\"Charley\", messagesResponse);\n        let data = messagesResponse.data;\n        if (messagesResponse.status !== 200) {\n          throw new Error(data.message);\n        }\n        const newMessages = data.reverse();\n        setState(prevState => {\n          const updatedMessages = [...newMessages, ...prevState.messages];\n          return {\n            ...prevState,\n            messages: updatedMessages\n          };\n        });\n      }\n    } catch (err) {\n      console.error(`Failed to append chat messages. ${err}`);\n    }\n  }\n\n  // Now render message window.\n  let lastTimestamp = null;\n  let lastUsername = \"\";\n  const messageItems = [];\n  for (const [idx, message] of state.messages.entries()) {\n    let newMessages = message;\n    if (newMessages.info) {\n      newMessages = newMessages.info;\n    } else {\n      console.log(\"No info. Most likely new\");\n    }\n    let timestamp = new Date(newMessages.timestamp);\n    if (!lastTimestamp || lastTimestamp.toDateString() !== timestamp.toDateString()) {\n      let dateItem = /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-auto md-chat-sys\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"md-font-sm my-0 text-muted\",\n            children: /*#__PURE__*/_jsxDEV(PrettyDate, {\n              date: timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, `date-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this);\n      messageItems.push(dateItem);\n      lastTimestamp = timestamp;\n      lastUsername = \"\";\n    }\n    let currentUsername = newMessages.sender;\n    let isCurrentUser = props.session.username === currentUsername ? true : false;\n    let chatAlign = isCurrentUser ? \"justify-content-end\" : \"justify-content-start\";\n    let chatColor = isCurrentUser ? \"md-chat-out\" : \"md-chat-in\";\n    let chatSpacing = lastUsername === currentUsername ? \"mt-1\" : \"mt-3\";\n    let messageItem = /*#__PURE__*/_jsxDEV(Row, {\n      className: `${chatAlign} ${chatSpacing}`,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-10\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: chatAlign,\n          children: /*#__PURE__*/_jsxDEV(FluidContainer, {\n            className: `md-chat-msg ${chatColor} mx-2 p-2`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"my-0\",\n              children: newMessages.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"my-0 md-font-xs text-muted\",\n                children: /*#__PURE__*/_jsxDEV(FullTime, {\n                  date: timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n    messageItems.push(messageItem);\n    lastUsername = currentUsername;\n  }\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"md-msg-window flex-grow-1 overflow-y border-top border-bottom\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(AutoLoader, {\n        callback: appendMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), messageItems, /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: bottomRef,\n        className: \"p-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n_s(MessageWindow, \"i/wWwgQlYPFnmEs22m1oDcSnyaE=\");\n_c = MessageWindow;\nvar _c;\n$RefreshReg$(_c, \"MessageWindow\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Col","FluidContainer","Row","FullTime","PrettyDate","AutoLoader","axios","jsxDEV","_jsxDEV","MessageWindow","props","_s","bottomRef","state","setState","messages","limit","currentBottomRef","current","appendMessage","message","prevState","updatedMessages","scrollIntoView","behavior","block","inline","err","console","error","channel","on","appendMessages","chat","url","_id","searchParams","URLSearchParams","append","Math","ceil","length","messagesResponse","get","toString","headers","session","authToken","log","data","status","Error","newMessages","reverse","lastTimestamp","lastUsername","messageItems","idx","entries","info","timestamp","Date","toDateString","dateItem","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","push","currentUsername","sender","isCurrentUser","username","chatAlign","chatColor","chatSpacing","messageItem","content","callback","ref","_c","$RefreshReg$"],"sources":["/Users/desmondoforiatta/Desktop/Medico/frontend/src/containers/chats/chat/detailedView/messageWindow.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Col, FluidContainer, Row } from '../../../../components/layout';\nimport { FullTime, PrettyDate } from '../../../../components/dates';\nimport { AutoLoader } from '../../../../components/loaders';\nimport axios from 'axios';\n\n\nexport default function MessageWindow(props) {\n    const bottomRef = useRef(null);\n\n    const [state, setState] = useState({\n        messages: [],\n        limit: 10\n    });\n    // console.log(\"Message window\", props);\n    useEffect(() => {\n        const currentBottomRef = bottomRef.current;\n\n        async function appendMessage(message) {\n            try {\n                setState(prevState => {\n                    const updatedMessages = [...prevState.messages, message];\n\n                    return {\n                        ...prevState,\n                        messages: updatedMessages\n                    }\n                });\n\n                currentBottomRef.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"end\",\n                    inline: \"nearest\"\n                });\n            } catch (err) {\n                console.error(`Failed to receive chat message from server. ${err}`);\n            }\n        }\n\n        if (props.channel) {\n            props.channel.on('chat', appendMessage);\n        }\n    }, [props.channel]);\n\n    async function appendMessages() {\n        // console.log(\"I was clicked\");\n        try {\n            if (props.chat) {\n                const url = `http://localhost:4090/api/chats/${props.chat._id}/messages`;\n\n                const searchParams = new URLSearchParams();\n                searchParams.append('page', Math.ceil(state.messages.length / state.limit));\n                searchParams.append('limit', state.limit);\n\n                const messagesResponse = await axios.get(`${url}?${searchParams.toString()}`, {\n                    headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                    }\n                });\n                console.log(\"Charley\", messagesResponse)\n                let data =  messagesResponse.data;\n                if (messagesResponse.status !== 200) {\n                    throw new Error(data.message);\n                }\n            \n                const newMessages = data.reverse();\n                setState(prevState => {\n                    const updatedMessages = [ ...newMessages, ...prevState.messages ];\n\n                    return {\n                        ...prevState,\n                        messages: updatedMessages\n                    }\n                });\n            }   \n        } catch (err) {\n            console.error(`Failed to append chat messages. ${err}`);\n        }\n    }\n\n    // Now render message window.\n    let lastTimestamp = null;\n    let lastUsername = \"\";\n\n    const messageItems = [];\n    for (const [idx, message] of state.messages.entries()) {\n\n        let newMessages = message\n\n        if(newMessages.info){\n            newMessages = newMessages.info\n        }\n        else{\n            console.log(\"No info. Most likely new\");\n        }\n\n        let timestamp = new Date(newMessages.timestamp);\n\n        if (!lastTimestamp || lastTimestamp.toDateString() !== timestamp.toDateString()) {\n            let dateItem = (\n                <Row key={`date-${idx}`} className=\"justify-content-center mt-3\">\n                    <Col className=\"col-auto md-chat-sys\">\n                        <p className=\"md-font-sm my-0 text-muted\">\n                            <PrettyDate date={timestamp} />\n                        </p>\n                    </Col>\n                </Row>\n            );\n\n            messageItems.push(dateItem);\n            lastTimestamp = timestamp;\n            lastUsername = \"\";\n        }\n\n        let currentUsername = newMessages.sender;\n        let isCurrentUser = (props.session.username === currentUsername) ? true: false;\n\n        let chatAlign = (isCurrentUser) ? \"justify-content-end\": \"justify-content-start\";\n        let chatColor = (isCurrentUser) ? \"md-chat-out\": \"md-chat-in\";\n        let chatSpacing = (lastUsername === currentUsername) ? \"mt-1\": \"mt-3\";\n\n        let messageItem = (\n            <Row key={idx} className={`${chatAlign} ${chatSpacing}`}>\n                <Col className=\"col-10\">\n                    <Row className={chatAlign}>\n                        <FluidContainer className={`md-chat-msg ${chatColor} mx-2 p-2`}>\n                            <p className=\"my-0\">{newMessages.content}</p>\n                            <footer className=\"d-flex justify-content-end\">\n                                <p className=\"my-0 md-font-xs text-muted\">\n                                    <FullTime date={timestamp} />\n                                </p>\n                            </footer>\n                        </FluidContainer>\n                    </Row>\n                </Col>\n            </Row>\n        );\n\n        messageItems.push(messageItem);\n        lastUsername = currentUsername;\n    }\n\n    return (\n        <Row className=\"md-msg-window flex-grow-1 overflow-y border-top border-bottom\">\n            <Col>\n                <AutoLoader callback={appendMessages} />\n                {messageItems}\n                <span ref={bottomRef} className=\"p-1\"></span>\n            </Col>\n        </Row>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}